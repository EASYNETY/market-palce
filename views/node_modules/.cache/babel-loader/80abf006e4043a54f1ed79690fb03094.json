{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\OrdersToDeliver.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchOrdersToDeliver } from \"../../redux/actions/order-actions/fetchOrdersToDeliver\";\nimport { markOrderDelivered } from \"../../redux/actions/order-actions/markOrderDelivered\";\nimport { Container, Button, Col, Row, Image, Alert } from \"react-bootstrap\";\nimport { toast, Slide } from \"react-toastify\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport DashboardSpinner from \"./DashboardSpinner\";\n\nfunction OrdersToDeliver() {\n  const {\n    ordersToDeliver,\n    loading\n  } = useSelector(state => state.ordersToDeliverrr);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchOrdersToDeliver());\n  }, [dispatch]);\n  let emptyMessage;\n\n  if (!loading && ordersToDeliver.length === 0) {\n    emptyMessage = /*#__PURE__*/React.createElement(Alert, {\n      variant: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, \"There are no orders yet\");\n  }\n\n  let loadingSpinner;\n\n  if (loading && ordersToDeliver.length === 0) {\n    emptyMessage = /*#__PURE__*/React.createElement(DashboardSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    });\n  }\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n\n\n  const handleMarkOrderDelivered = orederId => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(markOrderDelivered(orederId)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(err => {\n      toast.error(err, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"orders-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"dashboard-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Orders to deliver\"), loadingSpinner, emptyMessage, ordersToDeliver.map(order => {\n    let singleOrder = /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order\",\n      key: order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, \"Order placed \"), /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, order.orderDate))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, order.totalPrice && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-todal-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, \"Total: \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }\n    }, \"$\", order.totalPrice))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Recipient:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }, order.address.firstName + \" \" + order.address.lastName)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Phone: +20\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, order.address.phoneNumber))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Order ID: #\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }\n    }, order._id)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"order-delivered-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, order.deliveredDate && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Delivered on:\", \" \", /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, order.deliveredDate))), order.products.map(productItem => /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order-item\",\n      key: productItem._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: `${process.env.PUBLIC_URL + \"/\" + productItem.product.productImage[0].path}`,\n      thumbnail: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${productItem.product._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, productItem.product.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, \"Quantity: \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 39\n      }\n    }, productItem.quantity)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, \"$Total:\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \" \", \"$\", productItem.quantity * productItem.product.price))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, !productItem.orderState.delivered && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        handleMarkOrderDelivered(productItem._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Deliver\"), productItem.orderState.delivered && /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, \"Delivered\")))))));\n    return singleOrder;\n  }))));\n}\n\nexport default OrdersToDeliver;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/OrdersToDeliver.js"],"names":["React","useEffect","useSelector","useDispatch","fetchOrdersToDeliver","markOrderDelivered","Container","Button","Col","Row","Image","Alert","toast","Slide","DashboardSidebar","Link","Moment","DashboardSpinner","OrdersToDeliver","ordersToDeliver","loading","state","ordersToDeliverrr","dispatch","emptyMessage","length","loadingSpinner","handleMarkOrderDelivered","orederId","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","err","error","autoClose","map","order","singleOrder","_id","orderDate","totalPrice","address","firstName","lastName","phoneNumber","deliveredDate","products","productItem","process","env","PUBLIC_URL","product","productImage","path","name","quantity","price","orderState","delivered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,wDAArC;AACA,SAASC,kBAAT,QAAmC,sDAAnC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,iBAA1D;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,iBAAhB,CAAhD;AAEA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACnB,oBAAoB,EAArB,CAAR;AACD,GAFQ,EAEN,CAACmB,QAAD,CAFM,CAAT;AAIA,MAAIC,YAAJ;;AACA,MAAI,CAACJ,OAAD,IAAYD,eAAe,CAACM,MAAhB,KAA2B,CAA3C,EAA8C;AAC5CD,IAAAA,YAAY,gBAAG,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAf;AACD;;AAED,MAAIE,cAAJ;;AACA,MAAIN,OAAO,IAAID,eAAe,CAACM,MAAhB,KAA2B,CAA1C,EAA6C;AAC3CD,IAAAA,YAAY,gBAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACD;AAED;AACF;AACA;AACA;;;AACE,QAAMG,wBAAwB,GAAGC,QAAQ,IAAI;AAC3C;AACAL,IAAAA,QAAQ,CAAClB,kBAAkB,CAACuB,QAAD,CAAnB,CAAR,CACGC,IADH,CACQC,GAAG,IAAI;AACXlB,MAAAA,KAAK,CAACmB,OAAN,CAAcD,GAAd,EAAmB;AACjBE,QAAAA,QAAQ,EAAEpB,KAAK,CAACqB,QAAN,CAAeC,WADR;AAEjBC,QAAAA,UAAU,EAAEtB;AAFK,OAAnB;AAID,KANH,EAOGuB,KAPH,CAOSC,GAAG,IAAI;AACZzB,MAAAA,KAAK,CAAC0B,KAAN,CAAYD,GAAZ,EAAiB;AACfL,QAAAA,QAAQ,EAAEpB,KAAK,CAACqB,QAAN,CAAeC,WADV;AAEfK,QAAAA,SAAS,EAAE;AAFI,OAAjB;AAID,KAZH;AAaD,GAfD;;AAiBA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEGb,cAFH,EAGGF,YAHH,EAIGL,eAAe,CAACqB,GAAhB,CAAoBC,KAAK,IAAI;AAC5B,QAAIC,WAAW,gBACb,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAED,KAAK,CAACE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,KAAK,CAACG,SAAzC,CAFF,CADF,CADF,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,UAAN,iBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQJ,KAAK,CAACI,UAAd,CADT,CAFJ,CAPF,eAcE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,GADb,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,OAAN,CAAcC,SAAd,GAA0B,GAA1B,GAAgCN,KAAK,CAACK,OAAN,CAAcE,QADjD,CAFF,CADF,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,KAAK,CAACK,OAAN,CAAcG,WAArB,CADZ,CAPF,CAdF,eAyBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,KAAK,CAACE,GAAb,CADb,CADF,CAzBF,CADF,eAiCE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACS,aAAN,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgB,GADhB,eAEE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCT,KAAK,CAACS,aAAzC,CAFF,CAFJ,CAjCF,EA0CGT,KAAK,CAACU,QAAN,CAAeX,GAAf,CAAmBY,WAAW,iBAC7B,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,GAAG,EAAEA,WAAW,CAACT,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAG,GACJU,OAAO,CAACC,GAAR,CAAYC,UAAZ,GACA,GADA,GAEAH,WAAW,CAACI,OAAZ,CAAoBC,YAApB,CAAiC,CAAjC,EAAoCC,IACrC,EALH;AAME,MAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWN,WAAW,CAACI,OAAZ,CAAoBb,GAAI,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMS,WAAW,CAACI,OAAZ,CAAoBG,IAA1B,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,WAAW,CAACQ,QAAnB,CADZ,CAJF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,OAEIR,WAAW,CAACQ,QAAZ,GAAuBR,WAAW,CAACI,OAAZ,CAAoBK,KAF/C,CAFF,CAPF,CADF,eAgBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACT,WAAW,CAACU,UAAZ,CAAuBC,SAAxB,iBACC,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbpC,QAAAA,wBAAwB,CAACyB,WAAW,CAACT,GAAb,CAAxB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAUGS,WAAW,CAACU,UAAZ,CAAuBC,SAAvB,iBACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,QAAQ,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CAhBF,CADF,CAZF,CADD,CA1CH,CADF;AAgGA,WAAOrB,WAAP;AACD,GAlGA,CAJH,CAPF,CADF,CADF;AAoHD;;AAED,eAAexB,eAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchOrdersToDeliver } from \"../../redux/actions/order-actions/fetchOrdersToDeliver\";\nimport { markOrderDelivered } from \"../../redux/actions/order-actions/markOrderDelivered\";\nimport { Container, Button, Col, Row, Image, Alert } from \"react-bootstrap\";\nimport { toast, Slide } from \"react-toastify\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport DashboardSpinner from \"./DashboardSpinner\";\n\nfunction OrdersToDeliver() {\n  const { ordersToDeliver, loading } = useSelector(state => state.ordersToDeliverrr);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchOrdersToDeliver());\n  }, [dispatch]);\n\n  let emptyMessage;\n  if (!loading && ordersToDeliver.length === 0) {\n    emptyMessage = <Alert variant='warning'>There are no orders yet</Alert>;\n  }\n\n  let loadingSpinner;\n  if (loading && ordersToDeliver.length === 0) {\n    emptyMessage = <DashboardSpinner />;\n  }\n\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n  const handleMarkOrderDelivered = orederId => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(markOrderDelivered(orederId))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(err => {\n        toast.error(err, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <Container fluid className='orders-history'>\n      <Row>\n        <Col md='3'>\n          <DashboardSidebar />\n        </Col>\n        {/*\n         ******************* My orders History *********\n         */}\n        <Col>\n          <h1 className='dashboard-headline'>Orders to deliver</h1>\n          {loadingSpinner}\n          {emptyMessage}\n          {ordersToDeliver.map(order => {\n            let singleOrder = (\n              <Row className='single-order' key={order._id}>\n                <Row className='single-order-heading'>\n                  <Col>\n                    <div className='order-time'>\n                      <div>Order placed </div>\n                      <Moment format='YYYY-MM-DD HH:mm'>{order.orderDate}</Moment>\n                    </div>\n                  </Col>\n                  <Col>\n                    {order.totalPrice && (\n                      <div className='order-todal-price'>\n                        Total: <span>${order.totalPrice}</span>\n                      </div>\n                    )}\n                  </Col>\n                  <Col md='4'>\n                    <Col>\n                      Recipient:{\" \"}\n                      <span>\n                        {order.address.firstName + \" \" + order.address.lastName}\n                      </span>\n                    </Col>\n                    <Col>\n                      Phone: +20<span>{order.address.phoneNumber}</span>\n                    </Col>\n                  </Col>\n                  <Col>\n                    <div className='order-id'>\n                      Order ID: #<span>{order._id}</span>\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row className='order-delivered-time'>\n                  {order.deliveredDate && (\n                    <div>\n                      Delivered on:{\" \"}\n                      <Moment format='YYYY-MM-DD HH:mm'>{order.deliveredDate}</Moment>\n                    </div>\n                  )}\n                </Row>\n\n                {order.products.map(productItem => (\n                  <Row className='single-order-item' key={productItem._id}>\n                    <Col md='3'>\n                      <Image\n                        src={`${\n                          process.env.PUBLIC_URL +\n                          \"/\" +\n                          productItem.product.productImage[0].path\n                        }`}\n                        thumbnail\n                      />\n                    </Col>\n\n                    <Col md='9'>\n                      <Row>\n                        <Col md='9'>\n                          <Link to={`/product/${productItem.product._id}`}>\n                            <div>{productItem.product.name}</div>\n                          </Link>\n                          <div className='quantity'>\n                            Quantity: <span>{productItem.quantity}</span>\n                          </div>\n                          <div className='price'>\n                            $Total:\n                            <span>\n                              {\" \"}\n                              ${productItem.quantity * productItem.product.price}\n                            </span>\n                          </div>\n                        </Col>\n                        <Col md='3'>\n                          {!productItem.orderState.delivered && (\n                            <Button\n                              onClick={() => {\n                                handleMarkOrderDelivered(productItem._id);\n                              }}>\n                              Deliver\n                            </Button>\n                          )}\n\n                          {productItem.orderState.delivered && (\n                            <Button variant='secondary' disabled>\n                              Delivered\n                            </Button>\n                          )}\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                ))}\n              </Row>\n            );\n\n            return singleOrder;\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OrdersToDeliver;\n"]},"metadata":{},"sourceType":"module"}