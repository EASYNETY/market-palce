{"ast":null,"code":"import { FETCH_ORDERS_TO_SHIP_STARTED, FETCH_ORDERS_TO_SHIP_SUCCESS, FETCH_ORDERS_TO_SHIP_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchordersToShip = () => (dispatch, getState) => {\n  dispatch(fetchordersToShipStarted());\n  axios.get(\"/api/order/ordersToShip\", tokenConfig(getState)).then(res => {\n    let ordersToShip = res.data.ordersToShip;\n    dispatch(fetchordersToShipSuccess(ordersToShip));\n  }).catch(err => {\n    dispatch(fetchordersToShipFailure(err.response.data.message));\n  });\n};\n\nconst fetchordersToShipStarted = () => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_STARTED\n  };\n};\n\nconst fetchordersToShipSuccess = ordersToShip => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_SUCCESS,\n    payload: {\n      ordersToShip\n    }\n  };\n};\n\nconst fetchordersToShipFailure = error => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["FETCH_ORDERS_TO_SHIP_STARTED","FETCH_ORDERS_TO_SHIP_SUCCESS","FETCH_ORDERS_TO_SHIP_FAILURE","tokenConfig","axios","fetchordersToShip","dispatch","getState","fetchordersToShipStarted","get","then","res","ordersToShip","data","fetchordersToShipSuccess","catch","err","fetchordersToShipFailure","response","message","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/order-actions/fetchOrdersToShip.js"],"sourcesContent":["import {\n  FETCH_ORDERS_TO_SHIP_STARTED,\n  FETCH_ORDERS_TO_SHIP_SUCCESS,\n  FETCH_ORDERS_TO_SHIP_FAILURE\n} from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchordersToShip = () => (dispatch, getState) => {\n  dispatch(fetchordersToShipStarted());\n\n  axios\n    .get(\"/api/order/ordersToShip\", tokenConfig(getState))\n    .then(res => {\n      let ordersToShip = res.data.ordersToShip;\n      dispatch(fetchordersToShipSuccess(ordersToShip));\n    })\n    .catch(err => {\n      dispatch(fetchordersToShipFailure(err.response.data.message));\n    });\n};\n\nconst fetchordersToShipStarted = () => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_STARTED\n  };\n};\n\nconst fetchordersToShipSuccess = ordersToShip => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_SUCCESS,\n    payload: { ordersToShip }\n  };\n};\n\nconst fetchordersToShipFailure = error => {\n  return {\n    type: FETCH_ORDERS_TO_SHIP_FAILURE,\n    payload: { error }\n  };\n};\n"],"mappings":"AAAA,SACEA,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,QAIO,UAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAC7DD,QAAQ,CAACE,wBAAwB,EAAzB,CAAR;EAEAJ,KAAK,CACFK,GADH,CACO,yBADP,EACkCN,WAAW,CAACI,QAAD,CAD7C,EAEGG,IAFH,CAEQC,GAAG,IAAI;IACX,IAAIC,YAAY,GAAGD,GAAG,CAACE,IAAJ,CAASD,YAA5B;IACAN,QAAQ,CAACQ,wBAAwB,CAACF,YAAD,CAAzB,CAAR;EACD,CALH,EAMGG,KANH,CAMSC,GAAG,IAAI;IACZV,QAAQ,CAACW,wBAAwB,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAnB,CAAzB,CAAR;EACD,CARH;AASD,CAZM;;AAcP,MAAMX,wBAAwB,GAAG,MAAM;EACrC,OAAO;IACLY,IAAI,EAAEpB;EADD,CAAP;AAGD,CAJD;;AAMA,MAAMc,wBAAwB,GAAGF,YAAY,IAAI;EAC/C,OAAO;IACLQ,IAAI,EAAEnB,4BADD;IAELoB,OAAO,EAAE;MAAET;IAAF;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMK,wBAAwB,GAAGK,KAAK,IAAI;EACxC,OAAO;IACLF,IAAI,EAAElB,4BADD;IAELmB,OAAO,EAAE;MAAEC;IAAF;EAFJ,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}