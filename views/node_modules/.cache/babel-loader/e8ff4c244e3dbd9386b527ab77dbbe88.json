{"ast":null,"code":"import { FETCH_USER_PRODUCTS_STARTED, FETCH_USER_PRODUCTS_SUCCESS, FETCH_USER_PRODUCTS_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchUserProducts = (pageNumber, perPage) => {\n  let params = {\n    page: pageNumber,\n    perPage\n  };\n  return (dispatch, getState) => {\n    dispatch(fetchUserProductsStarted());\n    axios.get(`/api/product/my_products`, tokenConfig(getState, params)).then(res => {\n      let products = res.data.products;\n      let pagesCount = res.data.pagesCount;\n      dispatch(fetchUserProductsSuccess(products, pagesCount));\n    }).catch(error => {\n      dispatch(fetchUserProductsFailure(error.message));\n    });\n  };\n};\n\nconst fetchUserProductsStarted = () => {\n  return {\n    type: FETCH_USER_PRODUCTS_STARTED\n  };\n};\n\nconst fetchUserProductsSuccess = (products, pagesCount) => {\n  return {\n    type: FETCH_USER_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      pagesCount\n    }\n  };\n};\n\nconst fetchUserProductsFailure = error => {\n  return {\n    type: FETCH_USER_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["FETCH_USER_PRODUCTS_STARTED","FETCH_USER_PRODUCTS_SUCCESS","FETCH_USER_PRODUCTS_FAILURE","tokenConfig","axios","fetchUserProducts","pageNumber","perPage","params","page","dispatch","getState","fetchUserProductsStarted","get","then","res","products","data","pagesCount","fetchUserProductsSuccess","catch","error","fetchUserProductsFailure","message","type","payload"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/product-actions/fetchUserProductsAction.js"],"sourcesContent":["import {\n  FETCH_USER_PRODUCTS_STARTED,\n  FETCH_USER_PRODUCTS_SUCCESS,\n  FETCH_USER_PRODUCTS_FAILURE\n} from \"./../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchUserProducts = (pageNumber, perPage) => {\n  let params = { page: pageNumber, perPage };\n\n  return (dispatch, getState) => {\n    dispatch(fetchUserProductsStarted());\n\n    axios\n      .get(`/api/product/my_products`, tokenConfig(getState, params))\n      .then(res => {\n        let products = res.data.products;\n        let pagesCount = res.data.pagesCount;\n\n        dispatch(fetchUserProductsSuccess(products, pagesCount));\n      })\n      .catch(error => {\n        dispatch(fetchUserProductsFailure(error.message));\n      });\n  };\n};\n\nconst fetchUserProductsStarted = () => {\n  return {\n    type: FETCH_USER_PRODUCTS_STARTED\n  };\n};\n\nconst fetchUserProductsSuccess = (products, pagesCount) => {\n  return {\n    type: FETCH_USER_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      pagesCount\n    }\n  };\n};\n\nconst fetchUserProductsFailure = error => {\n  return {\n    type: FETCH_USER_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SACEA,2BADF,EAEEC,2BAFF,EAGEC,2BAHF,QAIO,YAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,OAAb,KAAyB;EACxD,IAAIC,MAAM,GAAG;IAAEC,IAAI,EAAEH,UAAR;IAAoBC;EAApB,CAAb;EAEA,OAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;IAC7BD,QAAQ,CAACE,wBAAwB,EAAzB,CAAR;IAEAR,KAAK,CACFS,GADH,CACQ,0BADR,EACmCV,WAAW,CAACQ,QAAD,EAAWH,MAAX,CAD9C,EAEGM,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASD,QAAxB;MACA,IAAIE,UAAU,GAAGH,GAAG,CAACE,IAAJ,CAASC,UAA1B;MAEAR,QAAQ,CAACS,wBAAwB,CAACH,QAAD,EAAWE,UAAX,CAAzB,CAAR;IACD,CAPH,EAQGE,KARH,CAQSC,KAAK,IAAI;MACdX,QAAQ,CAACY,wBAAwB,CAACD,KAAK,CAACE,OAAP,CAAzB,CAAR;IACD,CAVH;EAWD,CAdD;AAeD,CAlBM;;AAoBP,MAAMX,wBAAwB,GAAG,MAAM;EACrC,OAAO;IACLY,IAAI,EAAExB;EADD,CAAP;AAGD,CAJD;;AAMA,MAAMmB,wBAAwB,GAAG,CAACH,QAAD,EAAWE,UAAX,KAA0B;EACzD,OAAO;IACLM,IAAI,EAAEvB,2BADD;IAELwB,OAAO,EAAE;MACPT,QADO;MAEPE;IAFO;EAFJ,CAAP;AAOD,CARD;;AAUA,MAAMI,wBAAwB,GAAGD,KAAK,IAAI;EACxC,OAAO;IACLG,IAAI,EAAEtB,2BADD;IAELuB,OAAO,EAAE;MACPJ;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}