{"ast":null,"code":"import { FETCH_SINGLE_PRODUCT_STARTED, FETCH_SINGLE_PRODUCT_SUCCESS, FETCH_SINGLE_PRODUCT_FAILURE } from '../actions/types';\nconst initialState = {\n  product: {},\n  loading: false,\n  error: null\n};\n\nconst singleProductReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_SINGLE_PRODUCT_STARTED:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_SINGLE_PRODUCT_SUCCESS:\n      return { ...state,\n        product: action.payload.product,\n        loading: false,\n        error: null\n      };\n\n    case FETCH_SINGLE_PRODUCT_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default singleProductReducer;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/reducers/singleProductReducer.js"],"names":["FETCH_SINGLE_PRODUCT_STARTED","FETCH_SINGLE_PRODUCT_SUCCESS","FETCH_SINGLE_PRODUCT_FAILURE","initialState","product","loading","error","singleProductReducer","state","action","type","payload"],"mappings":"AAAA,SACIA,4BADJ,EAEIC,4BAFJ,EAGIC,4BAHJ,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,oBAAoB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,4BAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,4BAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP,OAFrB;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAMJ,SAAKJ,4BAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHnB,OAAP;;AAMJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,oBAAf","sourcesContent":["import {\n    FETCH_SINGLE_PRODUCT_STARTED,\n    FETCH_SINGLE_PRODUCT_SUCCESS,\n    FETCH_SINGLE_PRODUCT_FAILURE\n} from '../actions/types';\n\nconst initialState = {\n    product: {},\n    loading: false,\n    error: null\n}\n\nconst singleProductReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SINGLE_PRODUCT_STARTED:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_SINGLE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                product: action.payload.product,\n                loading: false,\n                error: null\n            }\n        case FETCH_SINGLE_PRODUCT_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default singleProductReducer;"]},"metadata":{},"sourceType":"module"}