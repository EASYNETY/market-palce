{"ast":null,"code":"import { DELETE_ADDRESS_SUCCESS, DELETE_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const deleteAddress = addressId => (dispatch, getState) => {\n  // request quert params attached to the req header\n  let params = {\n    action: \"delete\",\n    address: addressId\n  };\n  return new Promise((resolve, reject) => {\n    // Hit /api/address?action=delete&address=addressId\n    axios.delete(\"/api/address\", tokenConfig(getState, params)).then(res => {\n      let successMessage = res.data.message;\n      let address = res.data.address;\n      dispatch(deleteAddressSuccess(address, successMessage));\n      resolve(successMessage);\n    }).catch(error => {\n      dispatch(deleteAddressFailure(error.response.data.message));\n      reject(error.response.data.message);\n    });\n  });\n};\n\nconst deleteAddressSuccess = (address, successMessage) => {\n  return {\n    type: DELETE_ADDRESS_SUCCESS,\n    payload: {\n      address,\n      successMessage\n    }\n  };\n};\n\nconst deleteAddressFailure = error => {\n  return {\n    type: DELETE_ADDRESS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/address-actions/deleteAddressAction.js"],"names":["DELETE_ADDRESS_SUCCESS","DELETE_ADDRESS_FAILURE","tokenConfig","axios","deleteAddress","addressId","dispatch","getState","params","action","address","Promise","resolve","reject","delete","then","res","successMessage","data","message","deleteAddressSuccess","catch","error","deleteAddressFailure","response","type","payload"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,sBAAjC,QAA+D,UAA/D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGC,SAAS,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAChE;AACA,MAAIC,MAAM,GAAG;AAAEC,IAAAA,MAAM,EAAE,QAAV;AAAoBC,IAAAA,OAAO,EAAEL;AAA7B,GAAb;AAEA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACAV,IAAAA,KAAK,CACFW,MADH,CACU,cADV,EAC0BZ,WAAW,CAACK,QAAD,EAAWC,MAAX,CADrC,EAEGO,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,UAAIT,OAAO,GAAGM,GAAG,CAACE,IAAJ,CAASR,OAAvB;AACAJ,MAAAA,QAAQ,CAACc,oBAAoB,CAACV,OAAD,EAAUO,cAAV,CAArB,CAAR;AACAL,MAAAA,OAAO,CAACK,cAAD,CAAP;AACD,KAPH,EAQGI,KARH,CAQSC,KAAK,IAAI;AACdhB,MAAAA,QAAQ,CAACiB,oBAAoB,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAArB,CAAR;AACAN,MAAAA,MAAM,CAACS,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAAN;AACD,KAXH;AAYD,GAdM,CAAP;AAeD,CAnBM;;AAqBP,MAAMC,oBAAoB,GAAG,CAACV,OAAD,EAAUO,cAAV,KAA6B;AACxD,SAAO;AACLQ,IAAAA,IAAI,EAAEzB,sBADD;AAEL0B,IAAAA,OAAO,EAAE;AACPhB,MAAAA,OADO;AAEPO,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARD;;AAUA,MAAMM,oBAAoB,GAAGD,KAAK,IAAI;AACpC,SAAO;AACLG,IAAAA,IAAI,EAAExB,sBADD;AAELyB,IAAAA,OAAO,EAAE;AACPJ,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD","sourcesContent":["import { DELETE_ADDRESS_SUCCESS, DELETE_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const deleteAddress = addressId => (dispatch, getState) => {\n  // request quert params attached to the req header\n  let params = { action: \"delete\", address: addressId };\n\n  return new Promise((resolve, reject) => {\n    // Hit /api/address?action=delete&address=addressId\n    axios\n      .delete(\"/api/address\", tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let address = res.data.address;\n        dispatch(deleteAddressSuccess(address, successMessage));\n        resolve(successMessage);\n      })\n      .catch(error => {\n        dispatch(deleteAddressFailure(error.response.data.message));\n        reject(error.response.data.message);\n      });\n  });\n};\n\nconst deleteAddressSuccess = (address, successMessage) => {\n  return {\n    type: DELETE_ADDRESS_SUCCESS,\n    payload: {\n      address,\n      successMessage\n    }\n  };\n};\n\nconst deleteAddressFailure = error => {\n  return {\n    type: DELETE_ADDRESS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}