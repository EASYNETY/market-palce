{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\EditShipperForm.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, Toast } from \"react-bootstrap\";\nimport { Form, ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { editShipperInfo } from \"../../redux/actions/shippers-actions/editShipperInfo\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //validate our form inputs and handle the errors using YUP\n\nconst validationSchema = () => Yup.object({\n  company: Yup.string().min(1, \"Please enter a name more than 1 character\").required(\"This field is required\"),\n  area: Yup.string().min(1, \"Must be more than 1 characters\").required(\"This field is requried\"),\n  phone: Yup.number().min(10, \"Must be more than 10 characters\").required(\"This field is requried\")\n});\n\nfunction EditShipperForm(props) {\n  const [show, setShow] = useState(false); // dispatch our redux action\n\n  const dispatch = useDispatch(); //handle modal show and close\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n\n\n  const handleEditShipperInfo = shipper => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(editShipperInfo(shipper)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(err => {\n      toast.error(err, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    className: \"edit-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \" Add New Category \"), \" \"), \" \", /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      company: props.shipper.company,\n      area: props.shipper.area,\n      phone: props.shipper.phone\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const newShipper = {\n        shipperId: props.shipper._id,\n        company: values.company,\n        area: values.area,\n        phone: values.phone\n      };\n      handleEditShipperInfo(newShipper);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    method: \"put\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Company\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"company\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"area\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Choose City\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cairo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, \"Cairo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Alexandria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"Alexandria\")), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Submit\", \" \"), \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Close\", \" \"), \" \")))));\n}\n\nexport default EditShipperForm;","map":{"version":3,"names":["React","useState","Button","Modal","Toast","Form","ErrorMessage","Field","Formik","Yup","editShipperInfo","useDispatch","FontAwesomeIcon","faEdit","toast","Slide","validationSchema","object","company","string","min","required","area","phone","number","EditShipperForm","props","show","setShow","dispatch","handleClose","handleShow","handleEditShipperInfo","shipper","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","err","error","autoClose","values","setSubmitting","newShipper","shipperId","_id"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/EditShipperForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, Toast } from \"react-bootstrap\";\nimport { Form, ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { editShipperInfo } from \"../../redux/actions/shippers-actions/editShipperInfo\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n//validate our form inputs and handle the errors using YUP\nconst validationSchema = () =>\n  Yup.object({\n    company: Yup.string()\n      .min(1, \"Please enter a name more than 1 character\")\n      .required(\"This field is required\"),\n    area: Yup.string()\n      .min(1, \"Must be more than 1 characters\")\n      .required(\"This field is requried\"),\n    phone: Yup.number()\n      .min(10, \"Must be more than 10 characters\")\n      .required(\"This field is requried\")\n  });\n\nfunction EditShipperForm(props) {\n  const [show, setShow] = useState(false);\n\n  // dispatch our redux action\n  const dispatch = useDispatch();\n\n  //handle modal show and close\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n  const handleEditShipperInfo = shipper => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(editShipperInfo(shipper))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(err => {\n        toast.error(err, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Button className='btn' variant='primary' onClick={handleShow}>\n        <FontAwesomeIcon icon={faEdit} />{\" \"}\n      </Button>\n      <Modal show={show} onHide={handleClose} className='edit-modal'>\n        <Modal.Header closeButton>\n          <Modal.Title> Add New Category </Modal.Title>{\" \"}\n        </Modal.Header>{\" \"}\n        <Modal.Body>\n          <Formik\n            initialValues={{\n              company: props.shipper.company,\n              area: props.shipper.area,\n              phone: props.shipper.phone\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              const newShipper = {\n                shipperId: props.shipper._id,\n                company: values.company,\n                area: values.area,\n                phone: values.phone\n              };\n\n              handleEditShipperInfo(newShipper);\n\n              setSubmitting(false);\n            }}>\n            <Form method='put'>\n              <div className='form-group'>\n                <label htmlFor='name'>Company</label>\n                <Field type='text' name='company' className='form-control' />\n                <ErrorMessage component={Toast} name='company' />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='name'>Area</label>\n                <Field as='select' name='area' className='form-control'>\n                  <option value='' disabled selected>\n                    Choose City\n                  </option>\n                  <option value='Cairo'>Cairo</option>\n                  <option value='Alexandria'>Alexandria</option>\n                </Field>\n                <ErrorMessage component={Toast} name='area' />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='name'>Phone</label>\n                <Field type='text' name='phone' className='form-control' />\n                <ErrorMessage component={Toast} name='phone' />\n              </div>\n              <Button variant='primary' type='submit'>\n                Submit{\" \"}\n              </Button>{\" \"}\n              <Button variant='secondary' onClick={handleClose}>\n                Close{\" \"}\n              </Button>{\" \"}\n            </Form>\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default EditShipperForm;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,iBAArC;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,MAApC,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,eAAT,QAAgC,sDAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAO,uCAAP,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,MACvBP,GAAG,CAACQ,MAAJ,CAAW;EACTC,OAAO,EAAET,GAAG,CAACU,MAAJ,GACNC,GADM,CACF,CADE,EACC,2CADD,EAENC,QAFM,CAEG,wBAFH,CADA;EAITC,IAAI,EAAEb,GAAG,CAACU,MAAJ,GACHC,GADG,CACC,CADD,EACI,gCADJ,EAEHC,QAFG,CAEM,wBAFN,CAJG;EAOTE,KAAK,EAAEd,GAAG,CAACe,MAAJ,GACJJ,GADI,CACA,EADA,EACI,iCADJ,EAEJC,QAFI,CAEK,wBAFL;AAPE,CAAX,CADF;;AAaA,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC,CAD8B,CAG9B;;EACA,MAAM4B,QAAQ,GAAGlB,WAAW,EAA5B,CAJ8B,CAM9B;;EACA,MAAMmB,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;EACA,MAAMG,UAAU,GAAG,MAAMH,OAAO,CAAC,IAAD,CAAhC;EAEA;AACF;AACA;AACA;;;EACE,MAAMI,qBAAqB,GAAGC,OAAO,IAAI;IACvC;IACAJ,QAAQ,CAACnB,eAAe,CAACuB,OAAD,CAAhB,CAAR,CACGC,IADH,CACQC,GAAG,IAAI;MACXrB,KAAK,CAACsB,OAAN,CAAcD,GAAd,EAAmB;QACjBE,QAAQ,EAAEvB,KAAK,CAACwB,QAAN,CAAeC,WADR;QAEjBC,UAAU,EAAEzB;MAFK,CAAnB;IAID,CANH,EAOG0B,KAPH,CAOSC,GAAG,IAAI;MACZ5B,KAAK,CAAC6B,KAAN,CAAYD,GAAZ,EAAiB;QACfL,QAAQ,EAAEvB,KAAK,CAACwB,QAAN,CAAeC,WADV;QAEfK,SAAS,EAAE;MAFI,CAAjB;IAID,CAZH;EAaD,CAfD;;EAiBA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,SAAS,EAAC,KAAlB;IAAwB,OAAO,EAAC,SAAhC;IAA0C,OAAO,EAAEb,UAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,eAAD;IAAiB,IAAI,EAAElB,MAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EACoC,GADpC,CADF,eAIE,oBAAC,KAAD;IAAO,IAAI,EAAEc,IAAb;IAAmB,MAAM,EAAEG,WAA3B;IAAwC,SAAS,EAAC,YAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,MAAP;IAAc,WAAW,MAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,KAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADF,EACgD,GADhD,CADF,EAGkB,GAHlB,eAIE,oBAAC,KAAD,CAAO,IAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IACE,aAAa,EAAE;MACbZ,OAAO,EAAEQ,KAAK,CAACO,OAAN,CAAcf,OADV;MAEbI,IAAI,EAAEI,KAAK,CAACO,OAAN,CAAcX,IAFP;MAGbC,KAAK,EAAEG,KAAK,CAACO,OAAN,CAAcV;IAHR,CADjB;IAME,gBAAgB,EAAEP,gBANpB;IAOE,QAAQ,EAAE,CAAC6B,MAAD,WAA+B;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MACvC,MAAMC,UAAU,GAAG;QACjBC,SAAS,EAAEtB,KAAK,CAACO,OAAN,CAAcgB,GADR;QAEjB/B,OAAO,EAAE2B,MAAM,CAAC3B,OAFC;QAGjBI,IAAI,EAAEuB,MAAM,CAACvB,IAHI;QAIjBC,KAAK,EAAEsB,MAAM,CAACtB;MAJG,CAAnB;MAOAS,qBAAqB,CAACe,UAAD,CAArB;MAEAD,aAAa,CAAC,KAAD,CAAb;IACD,CAlBH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAmBE,oBAAC,IAAD;IAAM,MAAM,EAAC,KAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADF,eAEE,oBAAC,KAAD;IAAO,IAAI,EAAC,MAAZ;IAAmB,IAAI,EAAC,SAAxB;IAAkC,SAAS,EAAC,cAA5C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,YAAD;IAAc,SAAS,EAAE1C,KAAzB;IAAgC,IAAI,EAAC,SAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CADF,eAME;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UADF,eAEE,oBAAC,KAAD;IAAO,EAAE,EAAC,QAAV;IAAmB,IAAI,EAAC,MAAxB;IAA+B,SAAS,EAAC,cAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,KAAK,EAAC,EAAd;IAAiB,QAAQ,MAAzB;IAA0B,QAAQ,MAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADF,eAIE;IAAQ,KAAK,EAAC,OAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAJF,eAKE;IAAQ,KAAK,EAAC,YAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBALF,CAFF,eASE,oBAAC,YAAD;IAAc,SAAS,EAAEA,KAAzB;IAAgC,IAAI,EAAC,MAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATF,CANF,eAiBE;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADF,eAEE,oBAAC,KAAD;IAAO,IAAI,EAAC,MAAZ;IAAmB,IAAI,EAAC,OAAxB;IAAgC,SAAS,EAAC,cAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,YAAD;IAAc,SAAS,EAAEA,KAAzB;IAAgC,IAAI,EAAC,OAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CAjBF,eAsBE,oBAAC,MAAD;IAAQ,OAAO,EAAC,SAAhB;IAA0B,IAAI,EAAC,QAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aACS,GADT,CAtBF,EAwBY,GAxBZ,eAyBE,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,OAAO,EAAE0B,WAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YACQ,GADR,CAzBF,EA2BY,GA3BZ,CAnBF,CADF,CAJF,CAJF,CADF;AA+DD;;AAED,eAAeL,eAAf"},"metadata":{},"sourceType":"module"}