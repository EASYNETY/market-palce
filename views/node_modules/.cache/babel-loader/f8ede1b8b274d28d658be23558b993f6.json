{"ast":null,"code":"import { LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE } from \"./../types\";\nimport axios from \"axios\";\nexport const login = user => dispatch => {\n  return new Promise((resolve, reject) => {\n    axios.post(\"/api/users/login\", user).then(res => {\n      let user = res.data.user;\n      let message = res.data.message;\n      let token = res.data.token;\n      dispatch(loginUserSuccess(user, message, token));\n      resolve(message);\n    }).catch(err => {\n      let error = err.response.data.message;\n      dispatch(loginUserFailure(error));\n      reject(error);\n    });\n  });\n};\n\nconst loginUserSuccess = (user, message, token) => {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: {\n      user,\n      message,\n      token\n    }\n  };\n};\n\nconst loginUserFailure = error => {\n  return {\n    type: LOGIN_USER_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","axios","login","user","dispatch","Promise","resolve","reject","post","then","res","data","message","token","loginUserSuccess","catch","err","error","response","loginUserFailure","type","payload"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/auth-actions/loginAction.js"],"sourcesContent":["import { LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE } from \"./../types\";\nimport axios from \"axios\";\n\nexport const login = user => dispatch => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/api/users/login\", user)\n      .then(res => {\n        let user = res.data.user;\n        let message = res.data.message;\n        let token = res.data.token;\n        dispatch(loginUserSuccess(user, message, token));\n        resolve(message);\n      })\n      .catch(err => {\n        let error = err.response.data.message;\n        dispatch(loginUserFailure(error));\n        reject(error);\n      });\n  });\n};\n\nconst loginUserSuccess = (user, message, token) => {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: {\n      user,\n      message,\n      token\n    }\n  };\n};\n\nconst loginUserFailure = error => {\n  return {\n    type: LOGIN_USER_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,QAAuD,YAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAIC,QAAQ,IAAI;EACvC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCN,KAAK,CACFO,IADH,CACQ,kBADR,EAC4BL,IAD5B,EAEGM,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIP,IAAI,GAAGO,GAAG,CAACC,IAAJ,CAASR,IAApB;MACA,IAAIS,OAAO,GAAGF,GAAG,CAACC,IAAJ,CAASC,OAAvB;MACA,IAAIC,KAAK,GAAGH,GAAG,CAACC,IAAJ,CAASE,KAArB;MACAT,QAAQ,CAACU,gBAAgB,CAACX,IAAD,EAAOS,OAAP,EAAgBC,KAAhB,CAAjB,CAAR;MACAP,OAAO,CAACM,OAAD,CAAP;IACD,CARH,EASGG,KATH,CASSC,GAAG,IAAI;MACZ,IAAIC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAA9B;MACAR,QAAQ,CAACe,gBAAgB,CAACF,KAAD,CAAjB,CAAR;MACAV,MAAM,CAACU,KAAD,CAAN;IACD,CAbH;EAcD,CAfM,CAAP;AAgBD,CAjBM;;AAmBP,MAAMH,gBAAgB,GAAG,CAACX,IAAD,EAAOS,OAAP,EAAgBC,KAAhB,KAA0B;EACjD,OAAO;IACLO,IAAI,EAAErB,kBADD;IAELsB,OAAO,EAAE;MACPlB,IADO;MAEPS,OAFO;MAGPC;IAHO;EAFJ,CAAP;AAQD,CATD;;AAWA,MAAMM,gBAAgB,GAAGF,KAAK,IAAI;EAChC,OAAO;IACLG,IAAI,EAAEpB,kBADD;IAELqB,OAAO,EAAE;MACPJ;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}