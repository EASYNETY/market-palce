{"ast":null,"code":"import { FETCH_CATEGORIES_STARTED, FETCH_CATEGORIES_FAILURE, FETCH_CATEGORIES_SUCCESS } from \"./../types\";\nimport axios from \"axios\";\nexport const fetchCategories = () => {\n  return dispatch => {\n    dispatch(fetchCategoriesStarted());\n    axios.get(\"/api/category\").then(res => {\n      dispatch(fetchCategoriesSuccess(res.data));\n    }).catch(err => {\n      dispatch(fetchCategoriesFailure(err.message));\n    });\n  };\n};\n\nconst fetchCategoriesStarted = () => {\n  return {\n    type: FETCH_CATEGORIES_STARTED\n  };\n};\n\nconst fetchCategoriesSuccess = categories => {\n  return {\n    type: FETCH_CATEGORIES_SUCCESS,\n    payload: {\n      categories\n    }\n  };\n};\n\nconst fetchCategoriesFailure = error => {\n  return {\n    type: FETCH_CATEGORIES_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["FETCH_CATEGORIES_STARTED","FETCH_CATEGORIES_FAILURE","FETCH_CATEGORIES_SUCCESS","axios","fetchCategories","dispatch","fetchCategoriesStarted","get","then","res","fetchCategoriesSuccess","data","catch","err","fetchCategoriesFailure","message","type","categories","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/category-actions/fetchCategoriesAction.js"],"sourcesContent":["import {\n  FETCH_CATEGORIES_STARTED,\n  FETCH_CATEGORIES_FAILURE,\n  FETCH_CATEGORIES_SUCCESS\n} from \"./../types\";\nimport axios from \"axios\";\n\nexport const fetchCategories = () => {\n  return dispatch => {\n    dispatch(fetchCategoriesStarted());\n    axios\n      .get(\"/api/category\")\n      .then(res => {\n        dispatch(fetchCategoriesSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchCategoriesFailure(err.message));\n      });\n  };\n};\n\nconst fetchCategoriesStarted = () => {\n  return {\n    type: FETCH_CATEGORIES_STARTED\n  };\n};\n\nconst fetchCategoriesSuccess = categories => {\n  return {\n    type: FETCH_CATEGORIES_SUCCESS,\n    payload: {\n      categories\n    }\n  };\n};\n\nconst fetchCategoriesFailure = error => {\n  return {\n    type: FETCH_CATEGORIES_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SACEA,wBADF,EAEEC,wBAFF,EAGEC,wBAHF,QAIO,YAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EACnC,OAAOC,QAAQ,IAAI;IACjBA,QAAQ,CAACC,sBAAsB,EAAvB,CAAR;IACAH,KAAK,CACFI,GADH,CACO,eADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;MACXJ,QAAQ,CAACK,sBAAsB,CAACD,GAAG,CAACE,IAAL,CAAvB,CAAR;IACD,CAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;MACZR,QAAQ,CAACS,sBAAsB,CAACD,GAAG,CAACE,OAAL,CAAvB,CAAR;IACD,CAPH;EAQD,CAVD;AAWD,CAZM;;AAcP,MAAMT,sBAAsB,GAAG,MAAM;EACnC,OAAO;IACLU,IAAI,EAAEhB;EADD,CAAP;AAGD,CAJD;;AAMA,MAAMU,sBAAsB,GAAGO,UAAU,IAAI;EAC3C,OAAO;IACLD,IAAI,EAAEd,wBADD;IAELgB,OAAO,EAAE;MACPD;IADO;EAFJ,CAAP;AAMD,CAPD;;AASA,MAAMH,sBAAsB,GAAGK,KAAK,IAAI;EACtC,OAAO;IACLH,IAAI,EAAEf,wBADD;IAELiB,OAAO,EAAE;MACPC;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}