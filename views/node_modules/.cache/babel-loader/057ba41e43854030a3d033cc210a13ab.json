{"ast":null,"code":"import { ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const addCategory = category => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    axios.post(\"/api/category/create\", category, tokenConfig(getState)).then(res => {\n      let successMessage = res.data.message;\n      dispatch(addCategorySuccess(category, successMessage));\n      resolve(successMessage);\n    }).catch(error => {\n      dispatch(addCategoryFailure(error.response.data.message));\n      reject(error.response.data.message);\n    });\n  });\n};\n\nconst addCategorySuccess = (category, successMessage) => {\n  return {\n    type: ADD_CATEGORY_SUCCESS,\n    payload: {\n      category,\n      successMessage\n    }\n  };\n};\n\nconst addCategoryFailure = error => {\n  return {\n    type: ADD_CATEGORY_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["ADD_CATEGORY_SUCCESS","ADD_CATEGORY_FAILURE","tokenConfig","axios","addCategory","category","dispatch","getState","Promise","resolve","reject","post","then","res","successMessage","data","message","addCategorySuccess","catch","error","addCategoryFailure","response","type","payload"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/category-actions/addCategoryAction.js"],"sourcesContent":["import { ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const addCategory = category => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/api/category/create\", category, tokenConfig(getState))\n      .then(res => {\n        let successMessage = res.data.message;\n\n        dispatch(addCategorySuccess(category, successMessage));\n        resolve(successMessage);\n      })\n      .catch(error => {\n        dispatch(addCategoryFailure(error.response.data.message));\n        reject(error.response.data.message);\n      });\n  });\n};\n\nconst addCategorySuccess = (category, successMessage) => {\n  return {\n    type: ADD_CATEGORY_SUCCESS,\n    payload: {\n      category,\n      successMessage\n    }\n  };\n};\n\nconst addCategoryFailure = error => {\n  return {\n    type: ADD_CATEGORY_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,QAA2D,YAA3D;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAC7D,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCP,KAAK,CACFQ,IADH,CACQ,sBADR,EACgCN,QADhC,EAC0CH,WAAW,CAACK,QAAD,CADrD,EAEGK,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;MAEAV,QAAQ,CAACW,kBAAkB,CAACZ,QAAD,EAAWS,cAAX,CAAnB,CAAR;MACAL,OAAO,CAACK,cAAD,CAAP;IACD,CAPH,EAQGI,KARH,CAQSC,KAAK,IAAI;MACdb,QAAQ,CAACc,kBAAkB,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAAnB,CAAR;MACAN,MAAM,CAACS,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAAN;IACD,CAXH;EAYD,CAbM,CAAP;AAcD,CAfM;;AAiBP,MAAMC,kBAAkB,GAAG,CAACZ,QAAD,EAAWS,cAAX,KAA8B;EACvD,OAAO;IACLQ,IAAI,EAAEtB,oBADD;IAELuB,OAAO,EAAE;MACPlB,QADO;MAEPS;IAFO;EAFJ,CAAP;AAOD,CARD;;AAUA,MAAMM,kBAAkB,GAAGD,KAAK,IAAI;EAClC,OAAO;IACLG,IAAI,EAAErB,oBADD;IAELsB,OAAO,EAAE;MACPJ;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}