{"ast":null,"code":"import { FETCH_ORDERS_TO_DELIVER_STARTED, FETCH_ORDERS_TO_DELIVER_SUCCESS, FETCH_ORDERS_TO_DELIVER_FAILURE, ORDER_DELIVERED_SUCCESS, ORDER_DELIVERED_FAILURE } from \"../actions/types\";\nconst initialState = {\n  ordersToDeliver: [],\n  deliveredOrders: [],\n  loading: false,\n  success: null,\n  error: null\n};\n\nconst ordersToDeliver = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ORDERS_TO_DELIVER_STARTED:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_ORDERS_TO_DELIVER_SUCCESS:\n      return { ...state,\n        ordersToDeliver: action.payload.areaOrders.filter(order => {\n          return order.products.some(product => product.orderState.delivered === false);\n        }),\n        deliveredOrders: action.payload.areaOrders.filter(order => {\n          return order.products.every(product => product.orderState.delivered === true);\n        }),\n        loading: false,\n        error: null\n      };\n\n    case FETCH_ORDERS_TO_DELIVER_FAILURE:\n      return { ...state,\n        error: action.payload.error,\n        success: null,\n        loading: false\n      };\n\n    case ORDER_DELIVERED_SUCCESS:\n      return { ...state,\n        ordersToDeliver: state.ordersToDeliver.map(order => {\n          return order._id === action.payload.order._id ? { ...order,\n            products: order.products.map(product => {\n              return product._id === action.payload.deliveredItem._id ? { ...product,\n                orderState: { ...product.orderState,\n                  delivered: true\n                }\n              } : product;\n            })\n          } : order;\n        }),\n        loading: false,\n        error: null,\n        success: action.payload.message\n      };\n\n    case ORDER_DELIVERED_FAILURE:\n      return { ...state,\n        error: action.payload.error,\n        success: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ordersToDeliver;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/reducers/ordersToDeliver.js"],"names":["FETCH_ORDERS_TO_DELIVER_STARTED","FETCH_ORDERS_TO_DELIVER_SUCCESS","FETCH_ORDERS_TO_DELIVER_FAILURE","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAILURE","initialState","ordersToDeliver","deliveredOrders","loading","success","error","state","action","type","payload","areaOrders","filter","order","products","some","product","orderState","delivered","every","map","_id","deliveredItem","message"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,EAIEC,uBAJF,EAKEC,uBALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,EADE;AAEnBC,EAAAA,eAAe,EAAE,EAFE;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;;AAQA,MAAMJ,eAAe,GAAG,YAAkC;AAAA,MAAjCK,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,+BAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,+BAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,eAAe,EAAEM,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0BC,MAA1B,CAAiCC,KAAK,IAAI;AACzD,iBAAOA,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,SAAnB,KAAiC,KAAhE,CAAP;AACD,SAFgB,CAFZ;AAKLf,QAAAA,eAAe,EAAEK,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0BC,MAA1B,CAAiCC,KAAK,IAAI;AACzD,iBAAOA,KAAK,CAACC,QAAN,CAAeK,KAAf,CAAqBH,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,SAAnB,KAAiC,IAAjE,CAAP;AACD,SAFgB,CALZ;AAQLd,QAAAA,OAAO,EAAE,KARJ;AASLE,QAAAA,KAAK,EAAE;AATF,OAAP;;AAWF,SAAKR,+BAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeJ,KAFjB;AAGLD,QAAAA,OAAO,EAAE,IAHJ;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKL,uBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,eAAe,EAAEK,KAAK,CAACL,eAAN,CAAsBkB,GAAtB,CAA0BP,KAAK,IAAI;AAClD,iBAAOA,KAAK,CAACQ,GAAN,KAAcb,MAAM,CAACE,OAAP,CAAeG,KAAf,CAAqBQ,GAAnC,GACH,EACE,GAAGR,KADL;AAEEC,YAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeM,GAAf,CAAmBJ,OAAO,IAAI;AACtC,qBAAOA,OAAO,CAACK,GAAR,KAAgBb,MAAM,CAACE,OAAP,CAAeY,aAAf,CAA6BD,GAA7C,GACH,EACE,GAAGL,OADL;AAEEC,gBAAAA,UAAU,EAAE,EACV,GAAGD,OAAO,CAACC,UADD;AAEVC,kBAAAA,SAAS,EAAE;AAFD;AAFd,eADG,GAQHF,OARJ;AASD,aAVS;AAFZ,WADG,GAeHH,KAfJ;AAgBD,SAjBgB,CAFZ;AAoBLT,QAAAA,OAAO,EAAE,KApBJ;AAqBLE,QAAAA,KAAK,EAAE,IArBF;AAsBLD,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAea;AAtBnB,OAAP;;AAwBF,SAAKvB,uBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeJ,KAFjB;AAGLD,QAAAA,OAAO,EAAE,IAHJ;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF;AACE,aAAOG,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeL,eAAf","sourcesContent":["import {\n  FETCH_ORDERS_TO_DELIVER_STARTED,\n  FETCH_ORDERS_TO_DELIVER_SUCCESS,\n  FETCH_ORDERS_TO_DELIVER_FAILURE,\n  ORDER_DELIVERED_SUCCESS,\n  ORDER_DELIVERED_FAILURE\n} from \"../actions/types\";\n\nconst initialState = {\n  ordersToDeliver: [],\n  deliveredOrders: [],\n  loading: false,\n  success: null,\n  error: null\n};\n\nconst ordersToDeliver = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ORDERS_TO_DELIVER_STARTED:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_ORDERS_TO_DELIVER_SUCCESS:\n      return {\n        ...state,\n        ordersToDeliver: action.payload.areaOrders.filter(order => {\n          return order.products.some(product => product.orderState.delivered === false);\n        }),\n        deliveredOrders: action.payload.areaOrders.filter(order => {\n          return order.products.every(product => product.orderState.delivered === true);\n        }),\n        loading: false,\n        error: null\n      };\n    case FETCH_ORDERS_TO_DELIVER_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        success: null,\n        loading: false\n      };\n    case ORDER_DELIVERED_SUCCESS:\n      return {\n        ...state,\n        ordersToDeliver: state.ordersToDeliver.map(order => {\n          return order._id === action.payload.order._id\n            ? {\n                ...order,\n                products: order.products.map(product => {\n                  return product._id === action.payload.deliveredItem._id\n                    ? {\n                        ...product,\n                        orderState: {\n                          ...product.orderState,\n                          delivered: true\n                        }\n                      }\n                    : product;\n                })\n              }\n            : order;\n        }),\n        loading: false,\n        error: null,\n        success: action.payload.message\n      };\n    case ORDER_DELIVERED_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        success: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ordersToDeliver;\n"]},"metadata":{},"sourceType":"module"}