{"ast":null,"code":"import { DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAILURE } from \"../types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nexport const deleteProduct = id => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    axios.delete(`/api/product/${id}/delete`, tokenConfig(getState)).then(res => {\n      let successMessage = res.data.message;\n      dispatch(deleteProductSuccess(id, successMessage));\n      resolve(successMessage);\n    }).catch(err => {\n      let error = err.response.data.message;\n      dispatch(deleteProductFailure(error));\n      reject(error);\n    });\n  });\n};\n\nconst deleteProductSuccess = (id, successMessage) => {\n  return {\n    type: DELETE_PRODUCT_SUCCESS,\n    payload: {\n      id,\n      successMessage\n    }\n  };\n};\n\nconst deleteProductFailure = error => {\n  return {\n    type: DELETE_PRODUCT_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/product-actions/deleteProductAction.js"],"names":["DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILURE","axios","tokenConfig","deleteProduct","id","dispatch","getState","Promise","resolve","reject","delete","then","res","successMessage","data","message","deleteProductSuccess","catch","err","error","response","deleteProductFailure","type","payload"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,sBAAjC,QAA+D,UAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGC,EAAE,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACzD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCR,IAAAA,KAAK,CACFS,MADH,CACW,gBAAeN,EAAG,SAD7B,EACuCF,WAAW,CAACI,QAAD,CADlD,EAEGK,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACAV,MAAAA,QAAQ,CAACW,oBAAoB,CAACZ,EAAD,EAAKS,cAAL,CAArB,CAAR;AACAL,MAAAA,OAAO,CAACK,cAAD,CAAP;AACD,KANH,EAOGI,KAPH,CAOSC,GAAG,IAAI;AACZ,UAAIC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBC,OAA9B;AACAV,MAAAA,QAAQ,CAACgB,oBAAoB,CAACF,KAAD,CAArB,CAAR;AACAV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACD,KAXH;AAYD,GAbM,CAAP;AAcD,CAfM;;AAiBP,MAAMH,oBAAoB,GAAG,CAACZ,EAAD,EAAKS,cAAL,KAAwB;AACnD,SAAO;AACLS,IAAAA,IAAI,EAAEvB,sBADD;AAELwB,IAAAA,OAAO,EAAE;AACPnB,MAAAA,EADO;AAEPS,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARD;;AAUA,MAAMQ,oBAAoB,GAAGF,KAAK,IAAI;AACpC,SAAO;AACLG,IAAAA,IAAI,EAAEtB,sBADD;AAELuB,IAAAA,OAAO,EAAE;AACPJ,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD","sourcesContent":["import { DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAILURE } from \"../types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\n\nexport const deleteProduct = id => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .delete(`/api/product/${id}/delete`, tokenConfig(getState))\n      .then(res => {\n        let successMessage = res.data.message;\n        dispatch(deleteProductSuccess(id, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let error = err.response.data.message;\n        dispatch(deleteProductFailure(error));\n        reject(error);\n      });\n  });\n};\n\nconst deleteProductSuccess = (id, successMessage) => {\n  return {\n    type: DELETE_PRODUCT_SUCCESS,\n    payload: {\n      id,\n      successMessage\n    }\n  };\n};\n\nconst deleteProductFailure = error => {\n  return {\n    type: DELETE_PRODUCT_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}