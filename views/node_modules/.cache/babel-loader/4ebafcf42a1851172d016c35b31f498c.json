{"ast":null,"code":"import { DELETE_FROM_CART_SUCCESS, DELETE_FROM_CART_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const removeFromCart = productId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = {\n      productId\n    };\n    axios.get(\"/api/cart/removeFromCart\", tokenConfig(getState, params)).then(res => {\n      let successMessage = res.data.message;\n      let cart = res.data.cart;\n      dispatch(removeFromCartSuccess(cart, successMessage));\n      resolve(successMessage);\n    }).catch(err => {\n      let errorMessage = err.response.data.message;\n      dispatch(removeFromCartFailure(errorMessage));\n      reject(errorMessage);\n    });\n  });\n};\n\nconst removeFromCartSuccess = (cart, message) => {\n  return {\n    type: DELETE_FROM_CART_SUCCESS,\n    payload: {\n      cart,\n      message\n    }\n  };\n};\n\nconst removeFromCartFailure = error => {\n  return {\n    type: DELETE_FROM_CART_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/cart-actions/removeFromCart.js"],"names":["DELETE_FROM_CART_SUCCESS","DELETE_FROM_CART_FAILURE","tokenConfig","axios","removeFromCart","productId","dispatch","getState","Promise","resolve","reject","params","get","then","res","successMessage","data","message","cart","removeFromCartSuccess","catch","err","errorMessage","response","removeFromCartFailure","type","payload","error"],"mappings":"AAAA,SAASA,wBAAT,EAAmCC,wBAAnC,QAAmE,UAAnE;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGC,SAAS,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjE,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,MAAM,GAAG;AAAEN,MAAAA;AAAF,KAAb;AACAF,IAAAA,KAAK,CACFS,GADH,CACO,0BADP,EACmCV,WAAW,CAACK,QAAD,EAAWI,MAAX,CAD9C,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,UAAIC,IAAI,GAAGJ,GAAG,CAACE,IAAJ,CAASE,IAApB;AACAZ,MAAAA,QAAQ,CAACa,qBAAqB,CAACD,IAAD,EAAOH,cAAP,CAAtB,CAAR;AACAN,MAAAA,OAAO,CAACM,cAAD,CAAP;AACD,KAPH,EAQGK,KARH,CAQSC,GAAG,IAAI;AACZ,UAAIC,YAAY,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAArC;AACAX,MAAAA,QAAQ,CAACkB,qBAAqB,CAACF,YAAD,CAAtB,CAAR;AACAZ,MAAAA,MAAM,CAACY,YAAD,CAAN;AACD,KAZH;AAaD,GAfM,CAAP;AAgBD,CAjBM;;AAmBP,MAAMH,qBAAqB,GAAG,CAACD,IAAD,EAAOD,OAAP,KAAmB;AAC/C,SAAO;AACLQ,IAAAA,IAAI,EAAEzB,wBADD;AAEL0B,IAAAA,OAAO,EAAE;AAAER,MAAAA,IAAF;AAAQD,MAAAA;AAAR;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMO,qBAAqB,GAAGG,KAAK,IAAI;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAExB,wBADD;AAELyB,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import { DELETE_FROM_CART_SUCCESS, DELETE_FROM_CART_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const removeFromCart = productId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = { productId };\n    axios\n      .get(\"/api/cart/removeFromCart\", tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart;\n        dispatch(removeFromCartSuccess(cart, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessage = err.response.data.message;\n        dispatch(removeFromCartFailure(errorMessage));\n        reject(errorMessage);\n      });\n  });\n};\n\nconst removeFromCartSuccess = (cart, message) => {\n  return {\n    type: DELETE_FROM_CART_SUCCESS,\n    payload: { cart, message }\n  };\n};\n\nconst removeFromCartFailure = error => {\n  return {\n    type: DELETE_FROM_CART_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}