{"ast":null,"code":"import { ORDER_SHIPPED_SUCCESS, ORDER_SHIPPED_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const markOrderShipped = orderId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = {\n      orderId\n    };\n    axios.get(\"/api/order/ordersToShip/markAsShipped\", tokenConfig(getState, params)).then(res => {\n      let successMessage = res.data.message;\n      let shippedOrder = res.data.shippedOrder;\n      dispatch(markShippedSuccess(shippedOrder, successMessage));\n      resolve(successMessage);\n    }).catch(err => {\n      let errorMessge = err.response.data.message;\n      dispatch(markShippedFailure(errorMessge));\n      reject(errorMessge);\n    });\n  });\n};\n\nconst markShippedSuccess = (shippedOrder, message) => {\n  return {\n    type: ORDER_SHIPPED_SUCCESS,\n    payload: {\n      shippedOrder,\n      message\n    }\n  };\n};\n\nconst markShippedFailure = error => {\n  return {\n    type: ORDER_SHIPPED_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["ORDER_SHIPPED_SUCCESS","ORDER_SHIPPED_FAILURE","tokenConfig","axios","markOrderShipped","orderId","dispatch","getState","Promise","resolve","reject","params","get","then","res","successMessage","data","message","shippedOrder","markShippedSuccess","catch","err","errorMessge","response","markShippedFailure","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/order-actions/markOrderShipped.js"],"sourcesContent":["import { ORDER_SHIPPED_SUCCESS, ORDER_SHIPPED_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const markOrderShipped = orderId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = { orderId };\n\n    axios\n      .get(\"/api/order/ordersToShip/markAsShipped\", tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let shippedOrder = res.data.shippedOrder;\n\n        dispatch(markShippedSuccess(shippedOrder, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessge = err.response.data.message;\n\n        dispatch(markShippedFailure(errorMessge));\n        reject(errorMessge);\n      });\n  });\n};\n\nconst markShippedSuccess = (shippedOrder, message) => {\n  return {\n    type: ORDER_SHIPPED_SUCCESS,\n    payload: { shippedOrder, message }\n  };\n};\n\nconst markShippedFailure = error => {\n  return {\n    type: ORDER_SHIPPED_FAILURE,\n    payload: { error }\n  };\n};\n"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,QAA6D,UAA7D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,OAAO,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACjE,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtC,IAAIC,MAAM,GAAG;MAAEN;IAAF,CAAb;IAEAF,KAAK,CACFS,GADH,CACO,uCADP,EACgDV,WAAW,CAACK,QAAD,EAAWI,MAAX,CAD3D,EAEGE,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;MACA,IAAIC,YAAY,GAAGJ,GAAG,CAACE,IAAJ,CAASE,YAA5B;MAEAZ,QAAQ,CAACa,kBAAkB,CAACD,YAAD,EAAeH,cAAf,CAAnB,CAAR;MACAN,OAAO,CAACM,cAAD,CAAP;IACD,CARH,EASGK,KATH,CASSC,GAAG,IAAI;MACZ,IAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAApC;MAEAX,QAAQ,CAACkB,kBAAkB,CAACF,WAAD,CAAnB,CAAR;MACAZ,MAAM,CAACY,WAAD,CAAN;IACD,CAdH;EAeD,CAlBM,CAAP;AAmBD,CApBM;;AAsBP,MAAMH,kBAAkB,GAAG,CAACD,YAAD,EAAeD,OAAf,KAA2B;EACpD,OAAO;IACLQ,IAAI,EAAEzB,qBADD;IAEL0B,OAAO,EAAE;MAAER,YAAF;MAAgBD;IAAhB;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMO,kBAAkB,GAAGG,KAAK,IAAI;EAClC,OAAO;IACLF,IAAI,EAAExB,qBADD;IAELyB,OAAO,EAAE;MAAEC;IAAF;EAFJ,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}