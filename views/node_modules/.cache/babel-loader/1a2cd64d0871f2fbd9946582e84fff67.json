{"ast":null,"code":"import { FETCH_ORDERS_TO_DELIVER_STARTED, FETCH_ORDERS_TO_DELIVER_SUCCESS, FETCH_ORDERS_TO_DELIVER_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchOrdersToDeliver = () => (dispatch, getState) => {\n  dispatch(fetchOrdersToDeliverStarted());\n  axios.get(\"/api/order/ordersToDeliver\", tokenConfig(getState)).then(res => {\n    let ordersToDeliver = res.data.areaOrders;\n    dispatch(fetchOrdersToDeliverSuccess(ordersToDeliver));\n  }).catch(err => {\n    dispatch(fetchOrdersToDeliverFailure(err.response.data.message));\n  });\n};\n\nconst fetchOrdersToDeliverStarted = () => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_STARTED\n  };\n};\n\nconst fetchOrdersToDeliverSuccess = areaOrders => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_SUCCESS,\n    payload: {\n      areaOrders\n    }\n  };\n};\n\nconst fetchOrdersToDeliverFailure = error => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["FETCH_ORDERS_TO_DELIVER_STARTED","FETCH_ORDERS_TO_DELIVER_SUCCESS","FETCH_ORDERS_TO_DELIVER_FAILURE","tokenConfig","axios","fetchOrdersToDeliver","dispatch","getState","fetchOrdersToDeliverStarted","get","then","res","ordersToDeliver","data","areaOrders","fetchOrdersToDeliverSuccess","catch","err","fetchOrdersToDeliverFailure","response","message","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/order-actions/fetchOrdersToDeliver.js"],"sourcesContent":["import {\n  FETCH_ORDERS_TO_DELIVER_STARTED,\n  FETCH_ORDERS_TO_DELIVER_SUCCESS,\n  FETCH_ORDERS_TO_DELIVER_FAILURE\n} from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchOrdersToDeliver = () => (dispatch, getState) => {\n  dispatch(fetchOrdersToDeliverStarted());\n\n  axios\n    .get(\"/api/order/ordersToDeliver\", tokenConfig(getState))\n    .then(res => {\n      let ordersToDeliver = res.data.areaOrders;\n      dispatch(fetchOrdersToDeliverSuccess(ordersToDeliver));\n    })\n    .catch(err => {\n      dispatch(fetchOrdersToDeliverFailure(err.response.data.message));\n    });\n};\n\nconst fetchOrdersToDeliverStarted = () => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_STARTED\n  };\n};\n\nconst fetchOrdersToDeliverSuccess = areaOrders => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_SUCCESS,\n    payload: { areaOrders }\n  };\n};\n\nconst fetchOrdersToDeliverFailure = error => {\n  return {\n    type: FETCH_ORDERS_TO_DELIVER_FAILURE,\n    payload: { error }\n  };\n};\n"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,QAIO,UAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAChED,QAAQ,CAACE,2BAA2B,EAA5B,CAAR;EAEAJ,KAAK,CACFK,GADH,CACO,4BADP,EACqCN,WAAW,CAACI,QAAD,CADhD,EAEGG,IAFH,CAEQC,GAAG,IAAI;IACX,IAAIC,eAAe,GAAGD,GAAG,CAACE,IAAJ,CAASC,UAA/B;IACAR,QAAQ,CAACS,2BAA2B,CAACH,eAAD,CAA5B,CAAR;EACD,CALH,EAMGI,KANH,CAMSC,GAAG,IAAI;IACZX,QAAQ,CAACY,2BAA2B,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,OAAnB,CAA5B,CAAR;EACD,CARH;AASD,CAZM;;AAcP,MAAMZ,2BAA2B,GAAG,MAAM;EACxC,OAAO;IACLa,IAAI,EAAErB;EADD,CAAP;AAGD,CAJD;;AAMA,MAAMe,2BAA2B,GAAGD,UAAU,IAAI;EAChD,OAAO;IACLO,IAAI,EAAEpB,+BADD;IAELqB,OAAO,EAAE;MAAER;IAAF;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMI,2BAA2B,GAAGK,KAAK,IAAI;EAC3C,OAAO;IACLF,IAAI,EAAEnB,+BADD;IAELoB,OAAO,EAAE;MAAEC;IAAF;EAFJ,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}