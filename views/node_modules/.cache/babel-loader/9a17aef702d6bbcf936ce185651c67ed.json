{"ast":null,"code":"import { EDIT_SHIPPERS_SUCCESS, EDIT_SHIPPERS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const editShipperInfo = newShipper => (dispatch, getState) => {\n  // Hit /api/permissions/addShipperInfo\n  return new Promise((resolve, reject) => {\n    axios.put(\"/api/permissions/addShipperInfo\", newShipper, tokenConfig(getState)).then(res => {\n      let successMessage = res.data.message;\n      let shipper = res.data.shipper;\n      dispatch(editShipperInfoSuccess(shipper, successMessage));\n      resolve(successMessage);\n    }).catch(error => {\n      dispatch(editShipperInfoFailure(error.response.data.message));\n      reject(error.response.data.message);\n    });\n  });\n};\n\nconst editShipperInfoSuccess = (shipper, successMessage) => {\n  return {\n    type: EDIT_SHIPPERS_SUCCESS,\n    payload: {\n      shipper,\n      successMessage\n    }\n  };\n};\n\nconst editShipperInfoFailure = error => {\n  return {\n    type: EDIT_SHIPPERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["EDIT_SHIPPERS_SUCCESS","EDIT_SHIPPERS_FAILURE","tokenConfig","axios","editShipperInfo","newShipper","dispatch","getState","Promise","resolve","reject","put","then","res","successMessage","data","message","shipper","editShipperInfoSuccess","catch","error","editShipperInfoFailure","response","type","payload"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/shippers-actions/editShipperInfo.js"],"sourcesContent":["import { EDIT_SHIPPERS_SUCCESS, EDIT_SHIPPERS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const editShipperInfo = newShipper => (dispatch, getState) => {\n  // Hit /api/permissions/addShipperInfo\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\"/api/permissions/addShipperInfo\", newShipper, tokenConfig(getState))\n      .then(res => {\n        let successMessage = res.data.message;\n        let shipper = res.data.shipper;\n        dispatch(editShipperInfoSuccess(shipper, successMessage));\n        resolve(successMessage);\n      })\n      .catch(error => {\n        dispatch(editShipperInfoFailure(error.response.data.message));\n        reject(error.response.data.message);\n      });\n  });\n};\n\nconst editShipperInfoSuccess = (shipper, successMessage) => {\n  return {\n    type: EDIT_SHIPPERS_SUCCESS,\n    payload: {\n      shipper,\n      successMessage\n    }\n  };\n};\n\nconst editShipperInfoFailure = error => {\n  return {\n    type: EDIT_SHIPPERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,QAA6D,UAA7D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGC,UAAU,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACnE;EACA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCP,KAAK,CACFQ,GADH,CACO,iCADP,EAC0CN,UAD1C,EACsDH,WAAW,CAACK,QAAD,CADjE,EAEGK,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;MACA,IAAIC,OAAO,GAAGJ,GAAG,CAACE,IAAJ,CAASE,OAAvB;MACAX,QAAQ,CAACY,sBAAsB,CAACD,OAAD,EAAUH,cAAV,CAAvB,CAAR;MACAL,OAAO,CAACK,cAAD,CAAP;IACD,CAPH,EAQGK,KARH,CAQSC,KAAK,IAAI;MACdd,QAAQ,CAACe,sBAAsB,CAACD,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBC,OAArB,CAAvB,CAAR;MACAN,MAAM,CAACU,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBC,OAArB,CAAN;IACD,CAXH;EAYD,CAbM,CAAP;AAcD,CAhBM;;AAkBP,MAAME,sBAAsB,GAAG,CAACD,OAAD,EAAUH,cAAV,KAA6B;EAC1D,OAAO;IACLS,IAAI,EAAEvB,qBADD;IAELwB,OAAO,EAAE;MACPP,OADO;MAEPH;IAFO;EAFJ,CAAP;AAOD,CARD;;AAUA,MAAMO,sBAAsB,GAAGD,KAAK,IAAI;EACtC,OAAO;IACLG,IAAI,EAAEtB,qBADD;IAELuB,OAAO,EAAE;MACPJ;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}