{"ast":null,"code":"import { FETCH_CATEGORY_PRODUCTS_STARTED, FETCH_CATEGORY_PRODUCTS_SUCCESS, FETCH_CATEGORY_PRODUCTS_FAILURE } from \"./../types\";\nimport axios from \"axios\";\nexport const fetchCategoryProducts = id => {\n  return dispatch => {\n    dispatch(fetchCategoriesProductsStarted());\n    axios.get(`/api/category/${id}`).then(res => {\n      let category = res.data.category;\n      let products = res.data.products;\n      dispatch(fetchCategoriesProductsSuccess(products, category));\n    }).catch(err => {\n      dispatch(fetchCategoriesProductsFailure(err.message));\n    });\n  };\n};\n\nconst fetchCategoriesProductsStarted = () => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_STARTED\n  };\n};\n\nconst fetchCategoriesProductsSuccess = (products, category) => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      category\n    }\n  };\n};\n\nconst fetchCategoriesProductsFailure = error => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["FETCH_CATEGORY_PRODUCTS_STARTED","FETCH_CATEGORY_PRODUCTS_SUCCESS","FETCH_CATEGORY_PRODUCTS_FAILURE","axios","fetchCategoryProducts","id","dispatch","fetchCategoriesProductsStarted","get","then","res","category","data","products","fetchCategoriesProductsSuccess","catch","err","fetchCategoriesProductsFailure","message","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/category-actions/categoryProductsActions.js"],"sourcesContent":["import {\n  FETCH_CATEGORY_PRODUCTS_STARTED,\n  FETCH_CATEGORY_PRODUCTS_SUCCESS,\n  FETCH_CATEGORY_PRODUCTS_FAILURE\n} from \"./../types\";\nimport axios from \"axios\";\n\nexport const fetchCategoryProducts = id => {\n  return dispatch => {\n    dispatch(fetchCategoriesProductsStarted());\n    axios\n      .get(`/api/category/${id}`)\n      .then(res => {\n        let category = res.data.category;\n        let products = res.data.products;\n\n        dispatch(fetchCategoriesProductsSuccess(products, category));\n      })\n      .catch(err => {\n        dispatch(fetchCategoriesProductsFailure(err.message));\n      });\n  };\n};\n\nconst fetchCategoriesProductsStarted = () => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_STARTED\n  };\n};\n\nconst fetchCategoriesProductsSuccess = (products, category) => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      category\n    }\n  };\n};\n\nconst fetchCategoriesProductsFailure = error => {\n  return {\n    type: FETCH_CATEGORY_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,QAIO,YAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAGC,EAAE,IAAI;EACzC,OAAOC,QAAQ,IAAI;IACjBA,QAAQ,CAACC,8BAA8B,EAA/B,CAAR;IACAJ,KAAK,CACFK,GADH,CACQ,iBAAgBH,EAAG,EAD3B,EAEGI,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASD,QAAxB;MACA,IAAIE,QAAQ,GAAGH,GAAG,CAACE,IAAJ,CAASC,QAAxB;MAEAP,QAAQ,CAACQ,8BAA8B,CAACD,QAAD,EAAWF,QAAX,CAA/B,CAAR;IACD,CAPH,EAQGI,KARH,CAQSC,GAAG,IAAI;MACZV,QAAQ,CAACW,8BAA8B,CAACD,GAAG,CAACE,OAAL,CAA/B,CAAR;IACD,CAVH;EAWD,CAbD;AAcD,CAfM;;AAiBP,MAAMX,8BAA8B,GAAG,MAAM;EAC3C,OAAO;IACLY,IAAI,EAAEnB;EADD,CAAP;AAGD,CAJD;;AAMA,MAAMc,8BAA8B,GAAG,CAACD,QAAD,EAAWF,QAAX,KAAwB;EAC7D,OAAO;IACLQ,IAAI,EAAElB,+BADD;IAELmB,OAAO,EAAE;MACPP,QADO;MAEPF;IAFO;EAFJ,CAAP;AAOD,CARD;;AAUA,MAAMM,8BAA8B,GAAGI,KAAK,IAAI;EAC9C,OAAO;IACLF,IAAI,EAAEjB,+BADD;IAELkB,OAAO,EAAE;MACPC;IADO;EAFJ,CAAP;AAMD,CAPD"},"metadata":{},"sourceType":"module"}