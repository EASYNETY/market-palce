{"ast":null,"code":"import { FETCH_USER_PRODUCTS_STARTED, FETCH_USER_PRODUCTS_SUCCESS, FETCH_USER_PRODUCTS_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchUserProducts = (pageNumber, perPage) => {\n  let params = {\n    page: pageNumber,\n    perPage\n  };\n  return (dispatch, getState) => {\n    dispatch(fetchUserProductsStarted());\n    axios.get(`/api/product/my_products`, tokenConfig(getState, params)).then(res => {\n      let products = res.data.products;\n      let pagesCount = res.data.pagesCount;\n      dispatch(fetchUserProductsSuccess(products, pagesCount));\n    }).catch(error => {\n      dispatch(fetchUserProductsFailure(error.message));\n    });\n  };\n};\n\nconst fetchUserProductsStarted = () => {\n  return {\n    type: FETCH_USER_PRODUCTS_STARTED\n  };\n};\n\nconst fetchUserProductsSuccess = (products, pagesCount) => {\n  return {\n    type: FETCH_USER_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      pagesCount\n    }\n  };\n};\n\nconst fetchUserProductsFailure = error => {\n  return {\n    type: FETCH_USER_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/product-actions/fetchUserProductsAction.js"],"names":["FETCH_USER_PRODUCTS_STARTED","FETCH_USER_PRODUCTS_SUCCESS","FETCH_USER_PRODUCTS_FAILURE","tokenConfig","axios","fetchUserProducts","pageNumber","perPage","params","page","dispatch","getState","fetchUserProductsStarted","get","then","res","products","data","pagesCount","fetchUserProductsSuccess","catch","error","fetchUserProductsFailure","message","type","payload"],"mappings":"AAAA,SACEA,2BADF,EAEEC,2BAFF,EAGEC,2BAHF,QAIO,YAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,OAAb,KAAyB;AACxD,MAAIC,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAEH,UAAR;AAAoBC,IAAAA;AAApB,GAAb;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACE,wBAAwB,EAAzB,CAAR;AAEAR,IAAAA,KAAK,CACFS,GADH,CACQ,0BADR,EACmCV,WAAW,CAACQ,QAAD,EAAWH,MAAX,CAD9C,EAEGM,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASD,QAAxB;AACA,UAAIE,UAAU,GAAGH,GAAG,CAACE,IAAJ,CAASC,UAA1B;AAEAR,MAAAA,QAAQ,CAACS,wBAAwB,CAACH,QAAD,EAAWE,UAAX,CAAzB,CAAR;AACD,KAPH,EAQGE,KARH,CAQSC,KAAK,IAAI;AACdX,MAAAA,QAAQ,CAACY,wBAAwB,CAACD,KAAK,CAACE,OAAP,CAAzB,CAAR;AACD,KAVH;AAWD,GAdD;AAeD,CAlBM;;AAoBP,MAAMX,wBAAwB,GAAG,MAAM;AACrC,SAAO;AACLY,IAAAA,IAAI,EAAExB;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMmB,wBAAwB,GAAG,CAACH,QAAD,EAAWE,UAAX,KAA0B;AACzD,SAAO;AACLM,IAAAA,IAAI,EAAEvB,2BADD;AAELwB,IAAAA,OAAO,EAAE;AACPT,MAAAA,QADO;AAEPE,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARD;;AAUA,MAAMI,wBAAwB,GAAGD,KAAK,IAAI;AACxC,SAAO;AACLG,IAAAA,IAAI,EAAEtB,2BADD;AAELuB,IAAAA,OAAO,EAAE;AACPJ,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD","sourcesContent":["import {\n  FETCH_USER_PRODUCTS_STARTED,\n  FETCH_USER_PRODUCTS_SUCCESS,\n  FETCH_USER_PRODUCTS_FAILURE\n} from \"./../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchUserProducts = (pageNumber, perPage) => {\n  let params = { page: pageNumber, perPage };\n\n  return (dispatch, getState) => {\n    dispatch(fetchUserProductsStarted());\n\n    axios\n      .get(`/api/product/my_products`, tokenConfig(getState, params))\n      .then(res => {\n        let products = res.data.products;\n        let pagesCount = res.data.pagesCount;\n\n        dispatch(fetchUserProductsSuccess(products, pagesCount));\n      })\n      .catch(error => {\n        dispatch(fetchUserProductsFailure(error.message));\n      });\n  };\n};\n\nconst fetchUserProductsStarted = () => {\n  return {\n    type: FETCH_USER_PRODUCTS_STARTED\n  };\n};\n\nconst fetchUserProductsSuccess = (products, pagesCount) => {\n  return {\n    type: FETCH_USER_PRODUCTS_SUCCESS,\n    payload: {\n      products,\n      pagesCount\n    }\n  };\n};\n\nconst fetchUserProductsFailure = error => {\n  return {\n    type: FETCH_USER_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}