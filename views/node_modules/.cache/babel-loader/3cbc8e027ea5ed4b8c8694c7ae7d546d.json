{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\EditCategoryForm.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, Toast } from \"react-bootstrap\";\nimport { Form, ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { updateCategory } from \"../../redux/actions/category-actions/updateCategoryAction\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //validate our form inputs and handle the errors using YUP\n\nconst validationSchema = () => Yup.object({\n  name: Yup.string().min(1, \"Please enter a name more than 1 character\").required(\"This field is required\"),\n  description: Yup.string().min(10, \"Must be more than 10 characters\").required(\"This field is requried\")\n});\n\nfunction EditCategoryForm(props) {\n  const [show, setShow] = useState(false); // dispatch our redux action\n\n  const dispatch = useDispatch(); //handle modal show and close\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n\n\n  const handleUpdateCategory = (id, category) => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(updateCategory(id, category)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(err => {\n      toast.error(err, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cog\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \" Edit Category \")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: props.categoryName,\n      description: props.categoryDescription\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const newCategory = {\n        name: values.name,\n        description: values.description\n      };\n      handleUpdateCategory(props.categoryId, newCategory);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    action: `/api/product/${props.categoryId}/update`,\n    method: \"put\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"description\"), /*#__PURE__*/React.createElement(Field, {\n    as: \"textarea\",\n    name: \"description\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Submit\", \" \"), \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Close\", \" \"), \" \")))));\n}\n\nexport default EditCategoryForm;","map":{"version":3,"names":["React","useState","Button","Modal","Toast","Form","ErrorMessage","Field","Formik","Yup","updateCategory","useDispatch","toast","Slide","validationSchema","object","name","string","min","required","description","EditCategoryForm","props","show","setShow","dispatch","handleClose","handleShow","handleUpdateCategory","id","category","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","err","error","autoClose","categoryName","categoryDescription","values","setSubmitting","newCategory","categoryId"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/EditCategoryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, Toast } from \"react-bootstrap\";\nimport { Form, ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { updateCategory } from \"../../redux/actions/category-actions/updateCategoryAction\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n//validate our form inputs and handle the errors using YUP\nconst validationSchema = () =>\n  Yup.object({\n    name: Yup.string()\n      .min(1, \"Please enter a name more than 1 character\")\n      .required(\"This field is required\"),\n    description: Yup.string()\n      .min(10, \"Must be more than 10 characters\")\n      .required(\"This field is requried\")\n  });\n\nfunction EditCategoryForm(props) {\n  const [show, setShow] = useState(false);\n\n  // dispatch our redux action\n  const dispatch = useDispatch();\n\n  //handle modal show and close\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /**\n   * This method to handle our whole update process\n   * it takes the targeted category id and the category object\n   */\n  const handleUpdateCategory = (id, category) => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(updateCategory(id, category))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(err => {\n        toast.error(err, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <>\n      <Button variant='secondary' onClick={handleShow}>\n        <i className='fa fa-cog' aria-hidden='true'></i>\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title> Edit Category </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={{\n              name: props.categoryName,\n              description: props.categoryDescription\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              const newCategory = {\n                name: values.name,\n                description: values.description\n              };\n\n              handleUpdateCategory(props.categoryId, newCategory);\n\n              setSubmitting(false);\n            }}>\n            <Form action={`/api/product/${props.categoryId}/update`} method='put'>\n              <div className='form-group'>\n                <label htmlFor='name'>name</label>\n                <Field type='text' name='name' className='form-control' />\n                <ErrorMessage component={Toast} name='name' />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='description'>description</label>\n                <Field as='textarea' name='description' className='form-control' />\n                <ErrorMessage component={Toast} name='description' />\n              </div>\n              <Button variant='primary' type='submit'>\n                Submit{\" \"}\n              </Button>{\" \"}\n              <Button variant='secondary' onClick={handleClose}>\n                Close{\" \"}\n              </Button>{\" \"}\n            </Form>\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditCategoryForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}