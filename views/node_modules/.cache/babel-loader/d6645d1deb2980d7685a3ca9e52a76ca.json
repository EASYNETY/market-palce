{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\AddProductForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { Button, Container, Toast, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport { fetchCategories } from \"../../redux/actions/category-actions/fetchCategoriesAction\";\nimport { addProduct } from \"../../redux/actions/product-actions/addProductAction\"; // form validation useing Yup\n\nconst validate = () => Yup.object({\n  name: Yup.string().min(2, \"Must be more then one character\").required(\"This field is required\"),\n  description: Yup.string().min(10, \"Must be more than 10 characters\").required(\"This field is required\"),\n  category: Yup.string().required(\"This field is required\"),\n  price: Yup.number().positive(\"Must be more than 0\").integer(\"Must be more than 0\").required(\"This field is required\"),\n  numberInStock: Yup.number().positive(\"Must be more than 0\").integer(\"Must be more than 0\").required(\"This field is required\")\n});\n\nfunction AddProductForm() {\n  const [imgs, setImgs] = useState([]); // importing categories and laoding state from out store\n\n  const {\n    categories,\n    loading\n  } = useSelector(state => state.categoriesss); // react redux method to dispatch our functions\n\n  const dispatch = useDispatch(); // fetch all the the categories with dispatch before our component render\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]); // handle submit our form\n\n  const handleSubmitt = product => {\n    dispatch(addProduct(product)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(err => {\n      toast.error(err, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"dashboard-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Add product\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      description: \"\",\n      category: \"\",\n      price: \"\",\n      numberInStock: \"\"\n    },\n    validationSchema: validate,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const newProduct = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        price: values.price,\n        numberInStock: values.numberInStock,\n        productImage: imgs\n      };\n      handleSubmitt(newProduct);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"add-category-form\",\n    action: \"/api/product/create\",\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    placeholder: \"Enter product name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: \"textarea\",\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Enter product description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"category\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }, \"loading...\"), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }, \"Choose product category\"), categories.map(cat => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: cat._id,\n      value: cat._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }, cat.name);\n  }))), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"price\",\n    className: \"form-control\",\n    placeholder: \"Enter product price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"numberInStock\",\n    className: \"form-control\",\n    placeholder: \"Enter product numberInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"numberInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    multiple: true,\n    className: \"custom custom-file mb-2\",\n    type: \"file\",\n    name: \"productImage\",\n    onChange: e => {\n      console.log(e.target.files);\n      setImgs(e.target.files);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"ADD\", \" \"), \" \")))));\n}\n\nexport default AddProductForm;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/AddProductForm.js"],"names":["React","useState","useEffect","Yup","DashboardSidebar","Formik","Field","ErrorMessage","Form","Button","Container","Toast","Row","Col","useSelector","useDispatch","toast","Slide","fetchCategories","addProduct","validate","object","name","string","min","required","description","category","price","number","positive","integer","numberInStock","AddProductForm","imgs","setImgs","categories","loading","state","categoriesss","dispatch","handleSubmitt","product","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","err","error","autoClose","values","setSubmitting","newProduct","productImage","map","cat","_id","e","console","log","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { Button, Container, Toast, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport { fetchCategories } from \"../../redux/actions/category-actions/fetchCategoriesAction\";\nimport { addProduct } from \"../../redux/actions/product-actions/addProductAction\";\n\n// form validation useing Yup\nconst validate = () =>\n  Yup.object({\n    name: Yup.string()\n      .min(2, \"Must be more then one character\")\n      .required(\"This field is required\"),\n    description: Yup.string()\n      .min(10, \"Must be more than 10 characters\")\n      .required(\"This field is required\"),\n    category: Yup.string().required(\"This field is required\"),\n    price: Yup.number()\n      .positive(\"Must be more than 0\")\n      .integer(\"Must be more than 0\")\n      .required(\"This field is required\"),\n    numberInStock: Yup.number()\n      .positive(\"Must be more than 0\")\n      .integer(\"Must be more than 0\")\n      .required(\"This field is required\")\n  });\n\nfunction AddProductForm() {\n  const [imgs, setImgs] = useState([]);\n\n  // importing categories and laoding state from out store\n  const { categories, loading } = useSelector(state => state.categoriesss);\n\n  // react redux method to dispatch our functions\n  const dispatch = useDispatch();\n\n  // fetch all the the categories with dispatch before our component render\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  // handle submit our form\n  const handleSubmitt = product => {\n    dispatch(addProduct(product))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(err => {\n        toast.error(err, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col md='3'>\n          <DashboardSidebar />\n        </Col>\n        <Col>\n          <h1 className='dashboard-headline'>Add product</h1>\n          <Formik\n            initialValues={{\n              name: \"\",\n              description: \"\",\n              category: \"\",\n              price: \"\",\n              numberInStock: \"\"\n            }}\n            validationSchema={validate}\n            onSubmit={(values, { setSubmitting }) => {\n              const newProduct = {\n                name: values.name,\n                description: values.description,\n                category: values.category,\n                price: values.price,\n                numberInStock: values.numberInStock,\n                productImage: imgs\n              };\n\n              handleSubmitt(newProduct);\n\n              setSubmitting(false);\n            }}>\n            <Form\n              className='add-category-form'\n              action='/api/product/create'\n              method='post'\n              encType='multipart/form-data'>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='name'\n                  className='form-control'\n                  placeholder='Enter product name'\n                />\n                <ErrorMessage component={Toast} name='name' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  as='textarea'\n                  name='description'\n                  className='form-control'\n                  placeholder='Enter product description'\n                />\n                <ErrorMessage component={Toast} name='description' />\n              </div>\n              <div className='form-group'>\n                <Field as='select' name='category' className='form-control'>\n                  {loading && <option>loading...</option>}\n                  {!loading && (\n                    <>\n                      <option value='' disabled>\n                        Choose product category\n                      </option>\n                      {categories.map(cat => {\n                        return (\n                          <option key={cat._id} value={cat._id}>\n                            {cat.name}\n                          </option>\n                        );\n                      })}\n                    </>\n                  )}\n                </Field>\n                <ErrorMessage component={Toast} name='category' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='price'\n                  className='form-control'\n                  placeholder='Enter product price'\n                />\n                <ErrorMessage component={Toast} name='price' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='numberInStock'\n                  className='form-control'\n                  placeholder='Enter product numberInStock'\n                />\n                <ErrorMessage component={Toast} name='numberInStock' />\n              </div>\n              <input\n                required\n                multiple\n                className='custom custom-file mb-2'\n                type='file'\n                name='productImage'\n                onChange={e => {\n                  console.log(e.target.files);\n\n                  setImgs(e.target.files);\n                }}\n              />\n              <Button variant='secondary' type='submit'>\n                ADD{\" \"}\n              </Button>{\" \"}\n            </Form>\n          </Formik>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}