{"ast":null,"code":"import { ADMIN_PERMISSION_SUCCESS, ADMIN_PERMISSION_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const changeAdminPermission = function (adminId) {\n  let isAdmin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n      //let params = { adminId, isAdmin };\n      axios //api/permissions/addAdmin?adminId=\n      .put(\"/api/permissions/addAdmin\", {\n        adminId,\n        isAdmin\n      }, tokenConfig(getState)).then(res => {\n        let successMessage = res.data.message;\n        let admin = res.data.user;\n        dispatch(changeAdminPermissionSuccess(admin, successMessage));\n        resolve(successMessage);\n      }).catch(err => {\n        let errorMessge = err.response.data.message;\n        dispatch(changeAdminPermissionFailure(errorMessge));\n        reject(errorMessge);\n      });\n    });\n  };\n};\n\nconst changeAdminPermissionSuccess = (user, message) => {\n  return {\n    type: ADMIN_PERMISSION_SUCCESS,\n    payload: {\n      user,\n      message\n    }\n  };\n};\n\nconst changeAdminPermissionFailure = error => {\n  return {\n    type: ADMIN_PERMISSION_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/permissions-actions/adminPermissionActions.js"],"names":["ADMIN_PERMISSION_SUCCESS","ADMIN_PERMISSION_FAILURE","tokenConfig","axios","changeAdminPermission","adminId","isAdmin","dispatch","getState","Promise","resolve","reject","put","then","res","successMessage","data","message","admin","user","changeAdminPermissionSuccess","catch","err","errorMessge","response","changeAdminPermissionFailure","type","payload","error"],"mappings":"AAAA,SAASA,wBAAT,EAAmCC,wBAAnC,QAAmE,UAAnE;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,UAACC,OAAD;AAAA,MAAUC,OAAV,uEAAoB,IAApB;AAAA,SAA6B,CAChEC,QADgE,EAEhEC,QAFgE,KAG7D;AACH,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACAR,MAAAA,KAAK,CACH;AADG,OAEFS,GAFH,CAEO,2BAFP,EAEoC;AAAEP,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAFpC,EAE0DJ,WAAW,CAACM,QAAD,CAFrE,EAGGK,IAHH,CAGQC,GAAG,IAAI;AACX,YAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,YAAIC,KAAK,GAAGJ,GAAG,CAACE,IAAJ,CAASG,IAArB;AAEAZ,QAAAA,QAAQ,CAACa,4BAA4B,CAACF,KAAD,EAAQH,cAAR,CAA7B,CAAR;AACAL,QAAAA,OAAO,CAACK,cAAD,CAAP;AACD,OATH,EAUGM,KAVH,CAUSC,GAAG,IAAI;AACZ,YAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBC,OAApC;AAEAV,QAAAA,QAAQ,CAACkB,4BAA4B,CAACF,WAAD,CAA7B,CAAR;AACAZ,QAAAA,MAAM,CAACY,WAAD,CAAN;AACD,OAfH;AAgBD,KAlBM,CAAP;AAmBD,GAvBoC;AAAA,CAA9B;;AAyBP,MAAMH,4BAA4B,GAAG,CAACD,IAAD,EAAOF,OAAP,KAAmB;AACtD,SAAO;AACLS,IAAAA,IAAI,EAAE1B,wBADD;AAEL2B,IAAAA,OAAO,EAAE;AAAER,MAAAA,IAAF;AAAQF,MAAAA;AAAR;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMQ,4BAA4B,GAAGG,KAAK,IAAI;AAC5C,SAAO;AACLF,IAAAA,IAAI,EAAEzB,wBADD;AAEL0B,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import { ADMIN_PERMISSION_SUCCESS, ADMIN_PERMISSION_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const changeAdminPermission = (adminId, isAdmin = null) => (\n  dispatch,\n  getState\n) => {\n  return new Promise((resolve, reject) => {\n    //let params = { adminId, isAdmin };\n    axios\n      //api/permissions/addAdmin?adminId=\n      .put(\"/api/permissions/addAdmin\", { adminId, isAdmin }, tokenConfig(getState))\n      .then(res => {\n        let successMessage = res.data.message;\n        let admin = res.data.user;\n\n        dispatch(changeAdminPermissionSuccess(admin, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessge = err.response.data.message;\n\n        dispatch(changeAdminPermissionFailure(errorMessge));\n        reject(errorMessge);\n      });\n  });\n};\n\nconst changeAdminPermissionSuccess = (user, message) => {\n  return {\n    type: ADMIN_PERMISSION_SUCCESS,\n    payload: { user, message }\n  };\n};\n\nconst changeAdminPermissionFailure = error => {\n  return {\n    type: ADMIN_PERMISSION_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}