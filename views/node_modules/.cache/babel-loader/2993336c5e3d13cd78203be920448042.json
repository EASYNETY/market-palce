{"ast":null,"code":"import { EDIT_ADDRESS_SUCCESS, EDIT_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const editAddress = (address, id) => (dispatch, getState) => {\n  let params = {\n    action: \"edit\",\n    address: id\n  }; // Hit /api/address/addresses?action=edit&address=id\n\n  return new Promise((resolve, reject) => {\n    axios.put(\"/api/address\", address, tokenConfig(getState, params)).then(res => {\n      let successMessage = res.data.message;\n      let address = res.data.address;\n      dispatch(editAddressSuccess(address, successMessage));\n      resolve(successMessage);\n    }).catch(error => {\n      dispatch(editAddressFailure(error.response.data.message));\n      reject(error.response.data.message);\n    });\n  });\n};\n\nconst editAddressSuccess = (address, successMessage) => {\n  return {\n    type: EDIT_ADDRESS_SUCCESS,\n    payload: {\n      address,\n      successMessage\n    }\n  };\n};\n\nconst editAddressFailure = error => {\n  return {\n    type: EDIT_ADDRESS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/address-actions/updateAddressAction.js"],"names":["EDIT_ADDRESS_SUCCESS","EDIT_ADDRESS_FAILURE","tokenConfig","axios","editAddress","address","id","dispatch","getState","params","action","Promise","resolve","reject","put","then","res","successMessage","data","message","editAddressSuccess","catch","error","editAddressFailure","response","type","payload"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,QAA2D,UAA3D;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClE,MAAIC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXL,IAAAA,OAAO,EAAEC;AAFE,GAAb,CADkE,CAKlE;;AACA,SAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,IAAAA,KAAK,CACFW,GADH,CACO,cADP,EACuBT,OADvB,EACgCH,WAAW,CAACM,QAAD,EAAWC,MAAX,CAD3C,EAEGM,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,UAAId,OAAO,GAAGW,GAAG,CAACE,IAAJ,CAASb,OAAvB;AACAE,MAAAA,QAAQ,CAACa,kBAAkB,CAACf,OAAD,EAAUY,cAAV,CAAnB,CAAR;AACAL,MAAAA,OAAO,CAACK,cAAD,CAAP;AACD,KAPH,EAQGI,KARH,CAQSC,KAAK,IAAI;AACdf,MAAAA,QAAQ,CAACgB,kBAAkB,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAAnB,CAAR;AACAN,MAAAA,MAAM,CAACS,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBC,OAArB,CAAN;AACD,KAXH;AAYD,GAbM,CAAP;AAcD,CApBM;;AAsBP,MAAMC,kBAAkB,GAAG,CAACf,OAAD,EAAUY,cAAV,KAA6B;AACtD,SAAO;AACLQ,IAAAA,IAAI,EAAEzB,oBADD;AAEL0B,IAAAA,OAAO,EAAE;AACPrB,MAAAA,OADO;AAEPY,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARD;;AAUA,MAAMM,kBAAkB,GAAGD,KAAK,IAAI;AAClC,SAAO;AACLG,IAAAA,IAAI,EAAExB,oBADD;AAELyB,IAAAA,OAAO,EAAE;AACPJ,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD","sourcesContent":["import { EDIT_ADDRESS_SUCCESS, EDIT_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const editAddress = (address, id) => (dispatch, getState) => {\n  let params = {\n    action: \"edit\",\n    address: id\n  };\n  // Hit /api/address/addresses?action=edit&address=id\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\"/api/address\", address, tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let address = res.data.address;\n        dispatch(editAddressSuccess(address, successMessage));\n        resolve(successMessage);\n      })\n      .catch(error => {\n        dispatch(editAddressFailure(error.response.data.message));\n        reject(error.response.data.message);\n      });\n  });\n};\n\nconst editAddressSuccess = (address, successMessage) => {\n  return {\n    type: EDIT_ADDRESS_SUCCESS,\n    payload: {\n      address,\n      successMessage\n    }\n  };\n};\n\nconst editAddressFailure = error => {\n  return {\n    type: EDIT_ADDRESS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}