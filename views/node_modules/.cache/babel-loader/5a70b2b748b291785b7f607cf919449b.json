{"ast":null,"code":"import { SHIPPER_PERMISSION_SUCCESS, SHIPPER_PERMISSION_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const changeShipperPermission = function (shipperId) {\n  let isShipper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n      //let params = { shipperId, isShipper };\n      axios //api/permissions/addShipper?shipperId=\n      .put(\"/api/permissions/addShipper\", {\n        shipperId,\n        isShipper\n      }, tokenConfig(getState)).then(res => {\n        let successMessage = res.data.message;\n        let shipper = res.data.user;\n        dispatch(changeShipperPermissionSuccess(shipper, successMessage));\n        resolve(successMessage);\n      }).catch(err => {\n        let errorMessge = err.response.data.message;\n        dispatch(changeShipperPermissionFailure(errorMessge));\n        reject(errorMessge);\n      });\n    });\n  };\n};\n\nconst changeShipperPermissionSuccess = (user, message) => {\n  return {\n    type: SHIPPER_PERMISSION_SUCCESS,\n    payload: {\n      user,\n      message\n    }\n  };\n};\n\nconst changeShipperPermissionFailure = error => {\n  return {\n    type: SHIPPER_PERMISSION_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/permissions-actions/shipperPermissionActions.js"],"names":["SHIPPER_PERMISSION_SUCCESS","SHIPPER_PERMISSION_FAILURE","tokenConfig","axios","changeShipperPermission","shipperId","isShipper","dispatch","getState","Promise","resolve","reject","put","then","res","successMessage","data","message","shipper","user","changeShipperPermissionSuccess","catch","err","errorMessge","response","changeShipperPermissionFailure","type","payload","error"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,0BAArC,QAAuE,UAAvE;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,UAACC,SAAD;AAAA,MAAYC,SAAZ,uEAAwB,IAAxB;AAAA,SAAiC,CACtEC,QADsE,EAEtEC,QAFsE,KAGnE;AACH,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACAR,MAAAA,KAAK,CACH;AADG,OAEFS,GAFH,CAEO,6BAFP,EAEsC;AAAEP,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAFtC,EAEgEJ,WAAW,CAACM,QAAD,CAF3E,EAGGK,IAHH,CAGQC,GAAG,IAAI;AACX,YAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,YAAIC,OAAO,GAAGJ,GAAG,CAACE,IAAJ,CAASG,IAAvB;AAEAZ,QAAAA,QAAQ,CAACa,8BAA8B,CAACF,OAAD,EAAUH,cAAV,CAA/B,CAAR;AACAL,QAAAA,OAAO,CAACK,cAAD,CAAP;AACD,OATH,EAUGM,KAVH,CAUSC,GAAG,IAAI;AACZ,YAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBC,OAApC;AAEAV,QAAAA,QAAQ,CAACkB,8BAA8B,CAACF,WAAD,CAA/B,CAAR;AACAZ,QAAAA,MAAM,CAACY,WAAD,CAAN;AACD,OAfH;AAgBD,KAlBM,CAAP;AAmBD,GAvBsC;AAAA,CAAhC;;AAyBP,MAAMH,8BAA8B,GAAG,CAACD,IAAD,EAAOF,OAAP,KAAmB;AACxD,SAAO;AACLS,IAAAA,IAAI,EAAE1B,0BADD;AAEL2B,IAAAA,OAAO,EAAE;AAAER,MAAAA,IAAF;AAAQF,MAAAA;AAAR;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMQ,8BAA8B,GAAGG,KAAK,IAAI;AAC9C,SAAO;AACLF,IAAAA,IAAI,EAAEzB,0BADD;AAEL0B,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import { SHIPPER_PERMISSION_SUCCESS, SHIPPER_PERMISSION_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const changeShipperPermission = (shipperId, isShipper = null) => (\n  dispatch,\n  getState\n) => {\n  return new Promise((resolve, reject) => {\n    //let params = { shipperId, isShipper };\n    axios\n      //api/permissions/addShipper?shipperId=\n      .put(\"/api/permissions/addShipper\", { shipperId, isShipper }, tokenConfig(getState))\n      .then(res => {\n        let successMessage = res.data.message;\n        let shipper = res.data.user;\n\n        dispatch(changeShipperPermissionSuccess(shipper, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessge = err.response.data.message;\n\n        dispatch(changeShipperPermissionFailure(errorMessge));\n        reject(errorMessge);\n      });\n  });\n};\n\nconst changeShipperPermissionSuccess = (user, message) => {\n  return {\n    type: SHIPPER_PERMISSION_SUCCESS,\n    payload: { user, message }\n  };\n};\n\nconst changeShipperPermissionFailure = error => {\n  return {\n    type: SHIPPER_PERMISSION_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}