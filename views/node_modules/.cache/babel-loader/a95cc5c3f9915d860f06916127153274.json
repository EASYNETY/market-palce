{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\AddCategoryForm.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button, Toast, Row, Col, Container } from \"react-bootstrap\";\nimport { addCategory } from \"../../redux/actions/category-actions/addCategoryAction\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport DashboardSidebar from \"./DashboardSidebar\"; // form validation useing Yup\n\nconst validate = () => Yup.object({\n  name: Yup.string().min(2, \"Must be more then one character\").required(\"Category name is required\"),\n  description: Yup.string().min(10, \"Must be more than 10 characters\").required(\"This field is required\")\n});\n\nfunction AddCategoryForm() {\n  // dispatch our redux action\n  const dispatch = useDispatch();\n  /**\n   * This method to handle our whole adding process\n   * it takes the new category object\n   */\n\n  const handleAdd = newCategory => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(addCategory(newCategory)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(err => {\n      toast.error(err, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"dashboard-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Add Category\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      description: \"\"\n    },\n    validationSchema: validate,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const newCategory = {\n        name: values.name,\n        description: values.description\n      };\n      handleAdd(newCategory);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"add-category-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    placeholder: \"Enter Category name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n    as: \"textarea\",\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Enter Category description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Add\"))))));\n}\n\nexport default AddCategoryForm;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/AddCategoryForm.js"],"names":["React","Yup","Formik","Form","Field","ErrorMessage","Button","Toast","Row","Col","Container","addCategory","useDispatch","toast","Slide","DashboardSidebar","validate","object","name","string","min","required","description","AddCategoryForm","dispatch","handleAdd","newCategory","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","err","error","autoClose","values","setSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,SAAlC,QAAmD,iBAAnD;AACA,SAASC,WAAT,QAA4B,wDAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MACff,GAAG,CAACgB,MAAJ,CAAW;AACTC,EAAAA,IAAI,EAAEjB,GAAG,CAACkB,MAAJ,GACHC,GADG,CACC,CADD,EACI,iCADJ,EAEHC,QAFG,CAEM,2BAFN,CADG;AAITC,EAAAA,WAAW,EAAErB,GAAG,CAACkB,MAAJ,GACVC,GADU,CACN,EADM,EACF,iCADE,EAEVC,QAFU,CAED,wBAFC;AAJJ,CAAX,CADF;;AAUA,SAASE,eAAT,GAA2B;AACzB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA;AACF;AACA;AACA;;AACE,QAAMa,SAAS,GAAGC,WAAW,IAAI;AAC/B;AACAF,IAAAA,QAAQ,CAACb,WAAW,CAACe,WAAD,CAAZ,CAAR,CACGC,IADH,CACQC,GAAG,IAAI;AACXf,MAAAA,KAAK,CAACgB,OAAN,CAAcD,GAAd,EAAmB;AACjBE,QAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC,WADR;AAEjBC,QAAAA,UAAU,EAAEnB;AAFK,OAAnB;AAID,KANH,EAOGoB,KAPH,CAOSC,GAAG,IAAI;AACZtB,MAAAA,KAAK,CAACuB,KAAN,CAAYD,GAAZ,EAAiB;AACfL,QAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC,WADV;AAEfK,QAAAA,SAAS,EAAE;AAFI,OAAjB;AAID,KAZH;AAaD,GAfD;;AAiBA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbnB,MAAAA,IAAI,EAAE,EADO;AAEbI,MAAAA,WAAW,EAAE;AAFA,KADjB;AAKE,IAAA,gBAAgB,EAAEN,QALpB;AAME,IAAA,QAAQ,EAAE,CAACsB,MAAD,WAA+B;AAAA,UAAtB;AAAEC,QAAAA;AAAF,OAAsB;AACvC,YAAMb,WAAW,GAAG;AAClBR,QAAAA,IAAI,EAAEoB,MAAM,CAACpB,IADK;AAElBI,QAAAA,WAAW,EAAEgB,MAAM,CAAChB;AAFF,OAApB;AAKAG,MAAAA,SAAS,CAACC,WAAD,CAAT;AAEAa,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,WAAW,EAAC,qBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEhC,KAAzB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,WAAW,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEA,KAAzB;AAAgC,IAAA,IAAI,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,eAqBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WArBF,CAhBF,CAFF,CAJF,CADF,CADF;AAsDD;;AAED,eAAegB,eAAf","sourcesContent":["import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button, Toast, Row, Col, Container } from \"react-bootstrap\";\nimport { addCategory } from \"../../redux/actions/category-actions/addCategoryAction\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, Slide } from \"react-toastify\";\nimport DashboardSidebar from \"./DashboardSidebar\";\n\n// form validation useing Yup\nconst validate = () =>\n  Yup.object({\n    name: Yup.string()\n      .min(2, \"Must be more then one character\")\n      .required(\"Category name is required\"),\n    description: Yup.string()\n      .min(10, \"Must be more than 10 characters\")\n      .required(\"This field is required\")\n  });\n\nfunction AddCategoryForm() {\n  // dispatch our redux action\n  const dispatch = useDispatch();\n\n  /**\n   * This method to handle our whole adding process\n   * it takes the new category object\n   */\n  const handleAdd = newCategory => {\n    //this promise was returned to handle sucess and error messages\n    dispatch(addCategory(newCategory))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(err => {\n        toast.error(err, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col md='3'>\n          <DashboardSidebar />\n        </Col>\n        <Col>\n          <h1 className='dashboard-headline'>Add Category</h1>\n          <Formik\n            initialValues={{\n              name: \"\",\n              description: \"\"\n            }}\n            validationSchema={validate}\n            onSubmit={(values, { setSubmitting }) => {\n              const newCategory = {\n                name: values.name,\n                description: values.description\n              };\n\n              handleAdd(newCategory);\n\n              setSubmitting(false);\n            }}>\n            <Form className='add-category-form'>\n              <div className='form-group'>\n                <label htmlFor='name'>Name</label>\n                <Field\n                  type='text'\n                  name='name'\n                  className='form-control'\n                  placeholder='Enter Category name'\n                />\n                <ErrorMessage component={Toast} name='name' />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='description'>Description</label>\n                <Field\n                  as='textarea'\n                  name='description'\n                  className='form-control'\n                  placeholder='Enter Category description'\n                />\n                <ErrorMessage component={Toast} name='description' />\n              </div>\n              <Button variant='secondary' type='submit'>\n                Add\n              </Button>\n            </Form>\n          </Formik>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AddCategoryForm;\n"]},"metadata":{},"sourceType":"module"}