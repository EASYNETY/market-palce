{"ast":null,"code":"import { FETCH_ALL_USERS_STARTED, FETCH_ALL_USERS_SUCCESS, FETCH_ALL_USERS_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchAllUsers = () => (dispatch, getState) => {\n  dispatch(fetchAllUsersStarted());\n  axios.get(\"/api/permissions/allUsers\", tokenConfig(getState)).then(res => {\n    let users = res.data.users;\n    dispatch(fetchAllUsersSuccess(users));\n  }).catch(err => {\n    dispatch(fetchAllUsersFailure(err.response.data.message));\n  });\n};\n\nconst fetchAllUsersStarted = () => {\n  return {\n    type: FETCH_ALL_USERS_STARTED\n  };\n};\n\nconst fetchAllUsersSuccess = allUsers => {\n  return {\n    type: FETCH_ALL_USERS_SUCCESS,\n    payload: {\n      allUsers\n    }\n  };\n};\n\nconst fetchAllUsersFailure = error => {\n  return {\n    type: FETCH_ALL_USERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/permissions-actions/fetchAllUsers.js"],"names":["FETCH_ALL_USERS_STARTED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILURE","tokenConfig","axios","fetchAllUsers","dispatch","getState","fetchAllUsersStarted","get","then","res","users","data","fetchAllUsersSuccess","catch","err","fetchAllUsersFailure","response","message","type","allUsers","payload","error"],"mappings":"AAAA,SACEA,uBADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,YAJP;AAKA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACzDD,EAAAA,QAAQ,CAACE,oBAAoB,EAArB,CAAR;AAEAJ,EAAAA,KAAK,CACFK,GADH,CACO,2BADP,EACoCN,WAAW,CAACI,QAAD,CAD/C,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACX,QAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAArB;AACAN,IAAAA,QAAQ,CAACQ,oBAAoB,CAACF,KAAD,CAArB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAACW,oBAAoB,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAnB,CAArB,CAAR;AACD,GARH;AASD,CAZM;;AAcP,MAAMX,oBAAoB,GAAG,MAAM;AACjC,SAAO;AACLY,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMc,oBAAoB,GAAGO,QAAQ,IAAI;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEnB,uBADD;AAELqB,IAAAA,OAAO,EAAE;AAAED,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMJ,oBAAoB,GAAGM,KAAK,IAAI;AACpC,SAAO;AACLH,IAAAA,IAAI,EAAElB,uBADD;AAELoB,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import {\n  FETCH_ALL_USERS_STARTED,\n  FETCH_ALL_USERS_SUCCESS,\n  FETCH_ALL_USERS_FAILURE\n} from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchAllUsers = () => (dispatch, getState) => {\n  dispatch(fetchAllUsersStarted());\n\n  axios\n    .get(\"/api/permissions/allUsers\", tokenConfig(getState))\n    .then(res => {\n      let users = res.data.users;\n      dispatch(fetchAllUsersSuccess(users));\n    })\n    .catch(err => {\n      dispatch(fetchAllUsersFailure(err.response.data.message));\n    });\n};\n\nconst fetchAllUsersStarted = () => {\n  return {\n    type: FETCH_ALL_USERS_STARTED\n  };\n};\n\nconst fetchAllUsersSuccess = allUsers => {\n  return {\n    type: FETCH_ALL_USERS_SUCCESS,\n    payload: { allUsers }\n  };\n};\n\nconst fetchAllUsersFailure = error => {\n  return {\n    type: FETCH_ALL_USERS_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}