{"ast":null,"code":"import { ADD_TO_CART_SUCCESS, ADD_TO_CART_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const addToCart = function (productId) {\n  let orderQuantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n      let params = {\n        productId\n      };\n      axios //api/cart/addToCart?productId=123123132\n      .put(\"/api/cart/addToCart\", orderQuantity, tokenConfig(getState, params)).then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart.items;\n        dispatch(addToCartSuccess(cart, successMessage));\n        resolve(successMessage);\n      }).catch(err => {\n        let errorMessge = err.response.data.message;\n        dispatch(addToCartFailure(errorMessge));\n        reject(errorMessge);\n      });\n    });\n  };\n};\n\nconst addToCartSuccess = (cart, message) => {\n  return {\n    type: ADD_TO_CART_SUCCESS,\n    payload: {\n      cart,\n      message\n    }\n  };\n};\n\nconst addToCartFailure = error => {\n  return {\n    type: ADD_TO_CART_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["ADD_TO_CART_SUCCESS","ADD_TO_CART_FAILURE","tokenConfig","axios","addToCart","productId","orderQuantity","dispatch","getState","Promise","resolve","reject","params","put","then","res","successMessage","data","message","cart","items","addToCartSuccess","catch","err","errorMessge","response","addToCartFailure","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/cart-actions/addToCart.js"],"sourcesContent":["import { ADD_TO_CART_SUCCESS, ADD_TO_CART_FAILURE } from \"./../types\";\nimport { tokenConfig } from \"./../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const addToCart = (productId, orderQuantity = null) => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = { productId };\n    axios\n      //api/cart/addToCart?productId=123123132\n      .put(\"/api/cart/addToCart\", orderQuantity, tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart.items;\n\n        dispatch(addToCartSuccess(cart, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessge = err.response.data.message;\n\n        dispatch(addToCartFailure(errorMessge));\n        reject(errorMessge);\n      });\n  });\n};\n\nconst addToCartSuccess = (cart, message) => {\n  return {\n    type: ADD_TO_CART_SUCCESS,\n    payload: { cart, message }\n  };\n};\n\nconst addToCartFailure = error => {\n  return {\n    type: ADD_TO_CART_FAILURE,\n    payload: { error }\n  };\n};\n"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,QAAyD,YAAzD;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,UAACC,SAAD;EAAA,IAAYC,aAAZ,uEAA4B,IAA5B;EAAA,OAAqC,CAACC,QAAD,EAAWC,QAAX,KAAwB;IACpF,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,IAAIC,MAAM,GAAG;QAAEP;MAAF,CAAb;MACAF,KAAK,CACH;MADG,CAEFU,GAFH,CAEO,qBAFP,EAE8BP,aAF9B,EAE6CJ,WAAW,CAACM,QAAD,EAAWI,MAAX,CAFxD,EAGGE,IAHH,CAGQC,GAAG,IAAI;QACX,IAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;QACA,IAAIC,IAAI,GAAGJ,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAcC,KAAzB;QAEAb,QAAQ,CAACc,gBAAgB,CAACF,IAAD,EAAOH,cAAP,CAAjB,CAAR;QACAN,OAAO,CAACM,cAAD,CAAP;MACD,CATH,EAUGM,KAVH,CAUSC,GAAG,IAAI;QACZ,IAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBC,OAApC;QAEAX,QAAQ,CAACmB,gBAAgB,CAACF,WAAD,CAAjB,CAAR;QACAb,MAAM,CAACa,WAAD,CAAN;MACD,CAfH;IAgBD,CAlBM,CAAP;EAmBD,CApBwB;AAAA,CAAlB;;AAsBP,MAAMH,gBAAgB,GAAG,CAACF,IAAD,EAAOD,OAAP,KAAmB;EAC1C,OAAO;IACLS,IAAI,EAAE3B,mBADD;IAEL4B,OAAO,EAAE;MAAET,IAAF;MAAQD;IAAR;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMQ,gBAAgB,GAAGG,KAAK,IAAI;EAChC,OAAO;IACLF,IAAI,EAAE1B,mBADD;IAEL2B,OAAO,EAAE;MAAEC;IAAF;EAFJ,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}