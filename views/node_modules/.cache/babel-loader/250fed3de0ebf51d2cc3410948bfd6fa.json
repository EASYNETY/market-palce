{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\EditProductForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { Button, Toast, Modal } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCategories } from \"../../redux/actions/category-actions/fetchCategoriesAction\";\nimport { updateProduct } from \"../../redux/actions/product-actions/updateProductAction\";\nimport { toast, Slide } from \"react-toastify\"; // form validation useing Yup\n\nconst validate = () => Yup.object({\n  name: Yup.string().min(2, \"Must be more then one character\").required(\"This field is required\"),\n  description: Yup.string().min(10, \"Must be more than 10 characters\").required(\"This field is required\"),\n  category: Yup.string().required(\"This field is required\"),\n  price: Yup.number().positive(\"Must be more than 0\").integer(\"Must be more than 0\").required(\"This field is required\"),\n  numberInStock: Yup.number().integer(\"Must be more than 0\").required(\"This field is required\")\n});\n\nfunction EditProductForm(props) {\n  //handle modal show and hide\n  const [show, setShow] = useState(false);\n  const [imgs, setImgs] = useState([]); // importing categories and laoding state from out store\n\n  const {\n    categories,\n    loading\n  } = useSelector(state => state.categoriesss); // handle modal show and close\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); // react redux method to dispatch our functions\n\n\n  const dispatch = useDispatch(); // fetch all the the categories with dispatch before our component render\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]); //our form initial state\n\n  const initialState = {\n    name: props.name,\n    description: props.description,\n    category: props.category,\n    price: props.price,\n    numberInStock: props.numberInStock,\n    productImage: \"\"\n  }; // handle submit our form\n\n  const handleSubmit = newProduct => {\n    dispatch(updateProduct(props.id, newProduct)).then(res => {\n      toast.success(res, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        transition: Slide\n      });\n    }).catch(error => {\n      toast.error(error, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        autoClose: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cog\",\n    \"aria-hidden\": \"true\",\n    title: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Edit Product\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialState,\n    validationSchema: validate,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const newProduct = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        price: values.price,\n        numberInStock: values.numberInStock,\n        productImage: imgs\n      };\n      handleSubmit(newProduct);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    action: \"/api/product/create\",\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    placeholder: \"Enter product name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: \"textarea\",\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Enter product description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"category\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 31\n    }\n  }, \"loading...\"), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, \"Choose product category\"), categories.map(cat => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: cat._id,\n      value: cat._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }\n    }, cat.name);\n  }))), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"price\",\n    className: \"form-control\",\n    placeholder: \"Enter product price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"numberInStock\",\n    className: \"form-control\",\n    placeholder: \"Enter product numberInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    component: Toast,\n    name: \"numberInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    className: \"custom custom-file mb-2\",\n    type: \"file\",\n    name: \"productImage\",\n    onChange: e => setImgs(e.target.files),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Update\", \" \"), \" \")))));\n}\n\nexport default EditProductForm;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/EditProductForm.js"],"names":["React","useState","useEffect","Yup","Formik","Field","ErrorMessage","Form","Button","Toast","Modal","useSelector","useDispatch","fetchCategories","updateProduct","toast","Slide","validate","object","name","string","min","required","description","category","price","number","positive","integer","numberInStock","EditProductForm","props","show","setShow","imgs","setImgs","categories","loading","state","categoriesss","handleClose","handleShow","dispatch","initialState","productImage","handleSubmit","newProduct","id","then","res","success","position","POSITION","BOTTOM_LEFT","transition","catch","error","autoClose","values","setSubmitting","map","cat","_id","e","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { Button, Toast, Modal } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCategories } from \"../../redux/actions/category-actions/fetchCategoriesAction\";\nimport { updateProduct } from \"../../redux/actions/product-actions/updateProductAction\";\nimport { toast, Slide } from \"react-toastify\";\n\n// form validation useing Yup\nconst validate = () =>\n  Yup.object({\n    name: Yup.string()\n      .min(2, \"Must be more then one character\")\n      .required(\"This field is required\"),\n    description: Yup.string()\n      .min(10, \"Must be more than 10 characters\")\n      .required(\"This field is required\"),\n    category: Yup.string().required(\"This field is required\"),\n    price: Yup.number()\n      .positive(\"Must be more than 0\")\n      .integer(\"Must be more than 0\")\n      .required(\"This field is required\"),\n    numberInStock: Yup.number()\n      .integer(\"Must be more than 0\")\n      .required(\"This field is required\")\n  });\n\nfunction EditProductForm(props) {\n  //handle modal show and hide\n  const [show, setShow] = useState(false);\n\n  const [imgs, setImgs] = useState([]);\n\n  // importing categories and laoding state from out store\n  const { categories, loading } = useSelector(state => state.categoriesss);\n\n  // handle modal show and close\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // react redux method to dispatch our functions\n  const dispatch = useDispatch();\n\n  // fetch all the the categories with dispatch before our component render\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  //our form initial state\n  const initialState = {\n    name: props.name,\n    description: props.description,\n    category: props.category,\n    price: props.price,\n    numberInStock: props.numberInStock,\n    productImage: \"\"\n  };\n\n  // handle submit our form\n  const handleSubmit = newProduct => {\n    dispatch(updateProduct(props.id, newProduct))\n      .then(res => {\n        toast.success(res, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          transition: Slide\n        });\n      })\n      .catch(error => {\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          autoClose: false\n        });\n      });\n  };\n\n  return (\n    <>\n      <Button variant='secondary' onClick={handleShow}>\n        <i className='fa fa-cog' aria-hidden='true' title='Edit'></i>\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialState}\n            validationSchema={validate}\n            onSubmit={(values, { setSubmitting }) => {\n              const newProduct = {\n                name: values.name,\n                description: values.description,\n                category: values.category,\n                price: values.price,\n                numberInStock: values.numberInStock,\n                productImage: imgs\n              };\n\n              handleSubmit(newProduct);\n\n              setSubmitting(false);\n            }}>\n            <Form\n              action='/api/product/create'\n              method='post'\n              encType='multipart/form-data'>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='name'\n                  className='form-control'\n                  placeholder='Enter product name'\n                />\n                <ErrorMessage component={Toast} name='name' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  as='textarea'\n                  name='description'\n                  className='form-control'\n                  placeholder='Enter product description'\n                />\n                <ErrorMessage component={Toast} name='description' />\n              </div>\n              <div className='form-group'>\n                <Field as='select' name='category' className='form-control'>\n                  {loading && <option>loading...</option>}\n                  {!loading && (\n                    <>\n                      <option value='' disabled>\n                        Choose product category\n                      </option>\n                      {categories.map(cat => {\n                        return (\n                          <option key={cat._id} value={cat._id}>\n                            {cat.name}\n                          </option>\n                        );\n                      })}\n                    </>\n                  )}\n                </Field>\n                <ErrorMessage component={Toast} name='category' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='price'\n                  className='form-control'\n                  placeholder='Enter product price'\n                />\n                <ErrorMessage component={Toast} name='price' />\n              </div>\n              <div className='form-group'>\n                <Field\n                  type='text'\n                  name='numberInStock'\n                  className='form-control'\n                  placeholder='Enter product numberInStock'\n                />\n                <ErrorMessage component={Toast} name='numberInStock' />\n              </div>\n              <input\n                multiple\n                className='custom custom-file mb-2'\n                type='file'\n                name='productImage'\n                onChange={e => setImgs(e.target.files)}\n              />\n              <Button variant='primary' type='submit'>\n                Update{\" \"}\n              </Button>{\" \"}\n            </Form>\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditProductForm;\n"]},"metadata":{},"sourceType":"module"}