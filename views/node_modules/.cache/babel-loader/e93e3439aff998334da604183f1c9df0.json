{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\dashboard\\\\DeliveredOrders.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchOrdersToDeliver } from \"../../redux/actions/order-actions/fetchOrdersToDeliver\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Container, Col, Row, Image, Button } from \"react-bootstrap\";\nimport OrderProgress from \"./../account-settings/OrderProgress\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport DashboardSpinner from \"./DashboardSpinner\";\n\nfunction DeliveredOrders() {\n  const {\n    deliveredOrders,\n    loading\n  } = useSelector(state => state.ordersToDeliverrr);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchOrdersToDeliver());\n  }, [dispatch]);\n  let emptyMessage;\n\n  if (!loading && deliveredOrders.length === 0) {\n    emptyMessage = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"There are no orders yet\"));\n  }\n\n  let loadingSpinner;\n\n  if (loading && deliveredOrders.length === 0) {\n    emptyMessage = /*#__PURE__*/React.createElement(DashboardSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"orders-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"dashboard-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Delivered orders\"), loadingSpinner, emptyMessage, deliveredOrders.map(order => {\n    let singleOrder = /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order\",\n      key: order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, \" Order placed\"), /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, order.orderDate))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, order.totalPrice && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-todal-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }, \"Total: \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }\n    }, \"$\", order.totalPrice))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Recipient:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, order.address.firstName + \" \" + order.address.lastName)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Phone: +20\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, order.address.phoneNumber))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Order ID: #\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 34\n      }\n    }, order._id)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"order-delivered-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, order.deliveredDate && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Delivered on:\", \" \", /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, order.deliveredDate))), order.products.map(productItem => /*#__PURE__*/React.createElement(Row, {\n      className: \"single-order-item\",\n      key: productItem._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: `${process.env.PUBLIC_URL + \"/\" + productItem.product.productImage[0].path}`,\n      thumbnail: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${productItem.product._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, productItem.product.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }, \"Quantity: \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 39\n      }\n    }, productItem.quantity)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, \"$Total:\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, \" \", \"$\", productItem.quantity * productItem.product.price))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, productItem.orderState.delivered && /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 31\n      }\n    })))), /*#__PURE__*/React.createElement(OrderProgress, {\n      state: productItem.orderState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    })))));\n    return singleOrder;\n  }))));\n}\n\nexport default DeliveredOrders;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/dashboard/DeliveredOrders.js"],"names":["React","useEffect","useSelector","useDispatch","fetchOrdersToDeliver","DashboardSidebar","Container","Col","Row","Image","Button","OrderProgress","Link","Moment","DashboardSpinner","DeliveredOrders","deliveredOrders","loading","state","ordersToDeliverrr","dispatch","emptyMessage","length","loadingSpinner","map","order","singleOrder","_id","orderDate","totalPrice","address","firstName","lastName","phoneNumber","deliveredDate","products","productItem","process","env","PUBLIC_URL","product","productImage","path","name","quantity","price","orderState","delivered"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchOrdersToDeliver } from \"../../redux/actions/order-actions/fetchOrdersToDeliver\";\nimport DashboardSidebar from \"./DashboardSidebar\";\nimport { Container, Col, Row, Image, Button } from \"react-bootstrap\";\nimport OrderProgress from \"./../account-settings/OrderProgress\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport DashboardSpinner from \"./DashboardSpinner\";\n\nfunction DeliveredOrders() {\n  const { deliveredOrders, loading } = useSelector(state => state.ordersToDeliverrr);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchOrdersToDeliver());\n  }, [dispatch]);\n\n  let emptyMessage;\n  if (!loading && deliveredOrders.length === 0) {\n    emptyMessage = (\n      <tr>\n        <td>There are no orders yet</td>\n      </tr>\n    );\n  }\n\n  let loadingSpinner;\n  if (loading && deliveredOrders.length === 0) {\n    emptyMessage = <DashboardSpinner />;\n  }\n\n  return (\n    <Container fluid className='orders-history'>\n      <Row>\n        <Col md={3}>\n          <DashboardSidebar />\n        </Col>\n        {/*\n         ******************* My orders History *********\n         */}\n        <Col md={9}>\n          <h1 className='dashboard-headline'>Delivered orders</h1>\n          {loadingSpinner}\n          {emptyMessage}\n\n          {deliveredOrders.map(order => {\n            let singleOrder = (\n              <Row className='single-order' key={order._id}>\n                <Row className='single-order-heading'>\n                  <Col>\n                    <div className='order-time'>\n                      <div> Order placed</div>\n                      <Moment format='YYYY-MM-DD HH:mm'>{order.orderDate}</Moment>\n                    </div>\n                  </Col>\n                  <Col>\n                    {order.totalPrice && (\n                      <div className='order-todal-price'>\n                        Total: <span>${order.totalPrice}</span>\n                      </div>\n                    )}\n                  </Col>\n                  <Col md='4'>\n                    <Col>\n                      Recipient:{\" \"}\n                      <span>\n                        {order.address.firstName + \" \" + order.address.lastName}\n                      </span>\n                    </Col>\n                    <Col>\n                      Phone: +20<span>{order.address.phoneNumber}</span>\n                    </Col>\n                  </Col>\n                  <Col>\n                    <div className='order-id'>\n                      Order ID: #<span>{order._id}</span>\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row className='order-delivered-time'>\n                  {order.deliveredDate && (\n                    <div>\n                      Delivered on:{\" \"}\n                      <Moment format='YYYY-MM-DD HH:mm'>{order.deliveredDate}</Moment>\n                    </div>\n                  )}\n                </Row>\n\n                {order.products.map(productItem => (\n                  <Row className='single-order-item' key={productItem._id}>\n                    <Col md='3'>\n                      <Image\n                        src={`${\n                          process.env.PUBLIC_URL +\n                          \"/\" +\n                          productItem.product.productImage[0].path\n                        }`}\n                        thumbnail\n                      />\n                    </Col>\n\n                    <Col md='9'>\n                      <Row>\n                        <Col md='9'>\n                          <Link to={`/product/${productItem.product._id}`}>\n                            <div>{productItem.product.name}</div>\n                          </Link>\n                          <div className='quantity'>\n                            Quantity: <span>{productItem.quantity}</span>\n                          </div>\n                          <div className='price'>\n                            $Total:\n                            <span>\n                              {\" \"}\n                              ${productItem.quantity * productItem.product.price}\n                            </span>\n                          </div>\n                        </Col>\n                        <Col md='3'>\n                          {productItem.orderState.delivered && (\n                            <Button variant='success' disabled>\n                              <i className='fa fa-check' aria-hidden='true'></i>\n                            </Button>\n                          )}\n                        </Col>\n                      </Row>\n\n                      <OrderProgress state={productItem.orderState} />\n                    </Col>\n                  </Row>\n                ))}\n              </Row>\n            );\n\n            return singleOrder;\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default DeliveredOrders;\n"]},"metadata":{},"sourceType":"module"}