{"ast":null,"code":"import { FETCH_SHIPPERS_STARTED, FETCH_SHIPPERS_SUCCESS, FETCH_SHIPPERS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\"; // to fetch each user's all orders he placed\n\nexport const fetchAllShippers = () => (dispatch, getState) => {\n  dispatch(fetchShippersStarted());\n  axios.get(\"/api/permissions/allShippers\", tokenConfig(getState)).then(res => {\n    let shippers = res.data.shippers;\n    dispatch(fetchShippersSuccess(shippers));\n  }).catch(err => {\n    dispatch(fetchShippersFailure(err.response.data.message));\n  });\n};\n\nconst fetchShippersStarted = () => {\n  return {\n    type: FETCH_SHIPPERS_STARTED\n  };\n};\n\nconst fetchShippersSuccess = shippers => {\n  return {\n    type: FETCH_SHIPPERS_SUCCESS,\n    payload: {\n      shippers\n    }\n  };\n};\n\nconst fetchShippersFailure = error => {\n  return {\n    type: FETCH_SHIPPERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/shippers-actions/fetchAllShippers.js"],"names":["FETCH_SHIPPERS_STARTED","FETCH_SHIPPERS_SUCCESS","FETCH_SHIPPERS_FAILURE","tokenConfig","axios","fetchAllShippers","dispatch","getState","fetchShippersStarted","get","then","res","shippers","data","fetchShippersSuccess","catch","err","fetchShippersFailure","response","message","type","payload","error"],"mappings":"AAAA,SACEA,sBADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,UAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAACE,oBAAoB,EAArB,CAAR;AAEAJ,EAAAA,KAAK,CACFK,GADH,CACO,8BADP,EACuCN,WAAW,CAACI,QAAD,CADlD,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACX,QAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASD,QAAxB;AACAN,IAAAA,QAAQ,CAACQ,oBAAoB,CAACF,QAAD,CAArB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAACW,oBAAoB,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAnB,CAArB,CAAR;AACD,GARH;AASD,CAZM;;AAcP,MAAMX,oBAAoB,GAAG,MAAM;AACjC,SAAO;AACLY,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMc,oBAAoB,GAAGF,QAAQ,IAAI;AACvC,SAAO;AACLQ,IAAAA,IAAI,EAAEnB,sBADD;AAELoB,IAAAA,OAAO,EAAE;AAAET,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMK,oBAAoB,GAAGK,KAAK,IAAI;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAElB,sBADD;AAELmB,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import {\n  FETCH_SHIPPERS_STARTED,\n  FETCH_SHIPPERS_SUCCESS,\n  FETCH_SHIPPERS_FAILURE\n} from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\n// to fetch each user's all orders he placed\nexport const fetchAllShippers = () => (dispatch, getState) => {\n  dispatch(fetchShippersStarted());\n\n  axios\n    .get(\"/api/permissions/allShippers\", tokenConfig(getState))\n    .then(res => {\n      let shippers = res.data.shippers;\n      dispatch(fetchShippersSuccess(shippers));\n    })\n    .catch(err => {\n      dispatch(fetchShippersFailure(err.response.data.message));\n    });\n};\n\nconst fetchShippersStarted = () => {\n  return {\n    type: FETCH_SHIPPERS_STARTED\n  };\n};\n\nconst fetchShippersSuccess = shippers => {\n  return {\n    type: FETCH_SHIPPERS_SUCCESS,\n    payload: { shippers }\n  };\n};\n\nconst fetchShippersFailure = error => {\n  return {\n    type: FETCH_SHIPPERS_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}