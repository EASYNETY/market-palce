{"ast":null,"code":"import { CHOOSE_ORDER_ADDRESS_SUCCESS, CHOOSE_ORDER_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const chooseOrderAddress = address => (dispatch, getState) => {\n  axios //api/cart/chooseOrderAddress\n  .put(\"/api/cart/chooseOrderAddress\", address, tokenConfig(getState)).then(res => {\n    let successMessage = res.data.message;\n    let cart = res.data.cart;\n    dispatch(chooseOrderAddressSuccess(cart, successMessage));\n  }).catch(err => {\n    let errorMessge = err.response.data.message;\n    dispatch(chooseOrderAddressFailure(errorMessge));\n  });\n};\n\nconst chooseOrderAddressSuccess = (cart, message) => {\n  return {\n    type: CHOOSE_ORDER_ADDRESS_SUCCESS,\n    payload: {\n      cart,\n      message\n    }\n  };\n};\n\nconst chooseOrderAddressFailure = error => {\n  return {\n    type: CHOOSE_ORDER_ADDRESS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/cart-actions/chooseOrderAddress.js"],"names":["CHOOSE_ORDER_ADDRESS_SUCCESS","CHOOSE_ORDER_ADDRESS_FAILURE","tokenConfig","axios","chooseOrderAddress","address","dispatch","getState","put","then","res","successMessage","data","message","cart","chooseOrderAddressSuccess","catch","err","errorMessge","response","chooseOrderAddressFailure","type","payload","error"],"mappings":"AAAA,SAASA,4BAAT,EAAuCC,4BAAvC,QAA2E,UAA3E;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACnEJ,EAAAA,KAAK,CACH;AADG,GAEFK,GAFH,CAEO,8BAFP,EAEuCH,OAFvC,EAEgDH,WAAW,CAACK,QAAD,CAF3D,EAGGE,IAHH,CAGQC,GAAG,IAAI;AACX,QAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,QAAIC,IAAI,GAAGJ,GAAG,CAACE,IAAJ,CAASE,IAApB;AAEAR,IAAAA,QAAQ,CAACS,yBAAyB,CAACD,IAAD,EAAOH,cAAP,CAA1B,CAAR;AACD,GARH,EASGK,KATH,CASSC,GAAG,IAAI;AACZ,QAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAApC;AAEAP,IAAAA,QAAQ,CAACc,yBAAyB,CAACF,WAAD,CAA1B,CAAR;AACD,GAbH;AAcD,CAfM;;AAiBP,MAAMH,yBAAyB,GAAG,CAACD,IAAD,EAAOD,OAAP,KAAmB;AACnD,SAAO;AACLQ,IAAAA,IAAI,EAAErB,4BADD;AAELsB,IAAAA,OAAO,EAAE;AAAER,MAAAA,IAAF;AAAQD,MAAAA;AAAR;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMO,yBAAyB,GAAGG,KAAK,IAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAEpB,4BADD;AAELqB,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import { CHOOSE_ORDER_ADDRESS_SUCCESS, CHOOSE_ORDER_ADDRESS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const chooseOrderAddress = address => (dispatch, getState) => {\n  axios\n    //api/cart/chooseOrderAddress\n    .put(\"/api/cart/chooseOrderAddress\", address, tokenConfig(getState))\n    .then(res => {\n      let successMessage = res.data.message;\n      let cart = res.data.cart;\n\n      dispatch(chooseOrderAddressSuccess(cart, successMessage));\n    })\n    .catch(err => {\n      let errorMessge = err.response.data.message;\n\n      dispatch(chooseOrderAddressFailure(errorMessge));\n    });\n};\n\nconst chooseOrderAddressSuccess = (cart, message) => {\n  return {\n    type: CHOOSE_ORDER_ADDRESS_SUCCESS,\n    payload: { cart, message }\n  };\n};\n\nconst chooseOrderAddressFailure = error => {\n  return {\n    type: CHOOSE_ORDER_ADDRESS_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}