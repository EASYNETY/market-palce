{"ast":null,"code":"import { FETCH_SHIPPED_ORDERS_STARTED, FETCH_SHIPPED_ORDERS_SUCCESS, FETCH_SHIPPED_ORDERS_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const fetchShippedOrders = () => (dispatch, getState) => {\n  dispatch(fetchShippedOrdersStarted());\n  axios.get(\"/api/order/shippedOrders\", tokenConfig(getState)).then(res => {\n    let shippedOrders = res.data.shippedOrders;\n    dispatch(fetchShippedOrdersSuccess(shippedOrders));\n  }).catch(err => {\n    dispatch(fetchShippedOrdersFailure(err.response.data.message));\n  });\n};\n\nconst fetchShippedOrdersStarted = () => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_STARTED\n  };\n};\n\nconst fetchShippedOrdersSuccess = shippedOrders => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_SUCCESS,\n    payload: {\n      shippedOrders\n    }\n  };\n};\n\nconst fetchShippedOrdersFailure = error => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/order-actions/fetchShippedOrders.js"],"names":["FETCH_SHIPPED_ORDERS_STARTED","FETCH_SHIPPED_ORDERS_SUCCESS","FETCH_SHIPPED_ORDERS_FAILURE","tokenConfig","axios","fetchShippedOrders","dispatch","getState","fetchShippedOrdersStarted","get","then","res","shippedOrders","data","fetchShippedOrdersSuccess","catch","err","fetchShippedOrdersFailure","response","message","type","payload","error"],"mappings":"AAAA,SACEA,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,QAIO,UAJP;AAKA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9DD,EAAAA,QAAQ,CAACE,yBAAyB,EAA1B,CAAR;AAEAJ,EAAAA,KAAK,CACFK,GADH,CACO,0BADP,EACmCN,WAAW,CAACI,QAAD,CAD9C,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACX,QAAIC,aAAa,GAAGD,GAAG,CAACE,IAAJ,CAASD,aAA7B;AACAN,IAAAA,QAAQ,CAACQ,yBAAyB,CAACF,aAAD,CAA1B,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAACW,yBAAyB,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAnB,CAA1B,CAAR;AACD,GARH;AASD,CAZM;;AAcP,MAAMX,yBAAyB,GAAG,MAAM;AACtC,SAAO;AACLY,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMc,yBAAyB,GAAGF,aAAa,IAAI;AACjD,SAAO;AACLQ,IAAAA,IAAI,EAAEnB,4BADD;AAELoB,IAAAA,OAAO,EAAE;AAAET,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMK,yBAAyB,GAAGK,KAAK,IAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAElB,4BADD;AAELmB,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import {\n  FETCH_SHIPPED_ORDERS_STARTED,\n  FETCH_SHIPPED_ORDERS_SUCCESS,\n  FETCH_SHIPPED_ORDERS_FAILURE\n} from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const fetchShippedOrders = () => (dispatch, getState) => {\n  dispatch(fetchShippedOrdersStarted());\n\n  axios\n    .get(\"/api/order/shippedOrders\", tokenConfig(getState))\n    .then(res => {\n      let shippedOrders = res.data.shippedOrders;\n      dispatch(fetchShippedOrdersSuccess(shippedOrders));\n    })\n    .catch(err => {\n      dispatch(fetchShippedOrdersFailure(err.response.data.message));\n    });\n};\n\nconst fetchShippedOrdersStarted = () => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_STARTED\n  };\n};\n\nconst fetchShippedOrdersSuccess = shippedOrders => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_SUCCESS,\n    payload: { shippedOrders }\n  };\n};\n\nconst fetchShippedOrdersFailure = error => {\n  return {\n    type: FETCH_SHIPPED_ORDERS_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}