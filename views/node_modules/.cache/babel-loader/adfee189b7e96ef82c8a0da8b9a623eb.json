{"ast":null,"code":"import { CHANGE_CART_QUANTITY_SUCCESS, CHANGE_CART_QUANTITY_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const changeCartQuantity = function (productId) {\n  let orderQuantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n      let params = {\n        productId\n      };\n      axios //api/cart/changeQuantityFromCart?productId=\n      .put(\"/api/cart/changeQuantityFromCart\", orderQuantity, tokenConfig(getState, params)).then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart;\n        dispatch(changeCartQuantitySuccess(cart, successMessage));\n        resolve(successMessage);\n      }).catch(err => {\n        let errorMessge = err.response.data.message;\n        dispatch(changeCartQuantityFailure(errorMessge));\n        reject(errorMessge);\n      });\n    });\n  };\n};\n\nconst changeCartQuantitySuccess = (cart, message) => {\n  return {\n    type: CHANGE_CART_QUANTITY_SUCCESS,\n    payload: {\n      cart,\n      message\n    }\n  };\n};\n\nconst changeCartQuantityFailure = error => {\n  return {\n    type: CHANGE_CART_QUANTITY_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/cart-actions/changeCartQuantity.js"],"names":["CHANGE_CART_QUANTITY_SUCCESS","CHANGE_CART_QUANTITY_FAILURE","tokenConfig","axios","changeCartQuantity","productId","orderQuantity","dispatch","getState","Promise","resolve","reject","params","put","then","res","successMessage","data","message","cart","changeCartQuantitySuccess","catch","err","errorMessge","response","changeCartQuantityFailure","type","payload","error"],"mappings":"AAAA,SAASA,4BAAT,EAAuCC,4BAAvC,QAA2E,UAA3E;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,UAACC,SAAD;AAAA,MAAYC,aAAZ,uEAA4B,IAA5B;AAAA,SAAqC,CACrEC,QADqE,EAErEC,QAFqE,KAGlE;AACH,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIC,MAAM,GAAG;AAAEP,QAAAA;AAAF,OAAb;AACAF,MAAAA,KAAK,CACH;AADG,OAEFU,GAFH,CAGI,kCAHJ,EAIIP,aAJJ,EAKIJ,WAAW,CAACM,QAAD,EAAWI,MAAX,CALf,EAOGE,IAPH,CAOQC,GAAG,IAAI;AACX,YAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;AACA,YAAIC,IAAI,GAAGJ,GAAG,CAACE,IAAJ,CAASE,IAApB;AAEAZ,QAAAA,QAAQ,CAACa,yBAAyB,CAACD,IAAD,EAAOH,cAAP,CAA1B,CAAR;AACAN,QAAAA,OAAO,CAACM,cAAD,CAAP;AACD,OAbH,EAcGK,KAdH,CAcSC,GAAG,IAAI;AACZ,YAAIC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAApC;AAEAX,QAAAA,QAAQ,CAACkB,yBAAyB,CAACF,WAAD,CAA1B,CAAR;AACAZ,QAAAA,MAAM,CAACY,WAAD,CAAN;AACD,OAnBH;AAoBD,KAtBM,CAAP;AAuBD,GA3BiC;AAAA,CAA3B;;AA6BP,MAAMH,yBAAyB,GAAG,CAACD,IAAD,EAAOD,OAAP,KAAmB;AACnD,SAAO;AACLQ,IAAAA,IAAI,EAAE1B,4BADD;AAEL2B,IAAAA,OAAO,EAAE;AAAER,MAAAA,IAAF;AAAQD,MAAAA;AAAR;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMO,yBAAyB,GAAGG,KAAK,IAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAEzB,4BADD;AAEL0B,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFJ,GAAP;AAID,CALD","sourcesContent":["import { CHANGE_CART_QUANTITY_SUCCESS, CHANGE_CART_QUANTITY_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const changeCartQuantity = (productId, orderQuantity = null) => (\n  dispatch,\n  getState\n) => {\n  return new Promise((resolve, reject) => {\n    let params = { productId };\n    axios\n      //api/cart/changeQuantityFromCart?productId=\n      .put(\n        \"/api/cart/changeQuantityFromCart\",\n        orderQuantity,\n        tokenConfig(getState, params)\n      )\n      .then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart;\n\n        dispatch(changeCartQuantitySuccess(cart, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessge = err.response.data.message;\n\n        dispatch(changeCartQuantityFailure(errorMessge));\n        reject(errorMessge);\n      });\n  });\n};\n\nconst changeCartQuantitySuccess = (cart, message) => {\n  return {\n    type: CHANGE_CART_QUANTITY_SUCCESS,\n    payload: { cart, message }\n  };\n};\n\nconst changeCartQuantityFailure = error => {\n  return {\n    type: CHANGE_CART_QUANTITY_FAILURE,\n    payload: { error }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}