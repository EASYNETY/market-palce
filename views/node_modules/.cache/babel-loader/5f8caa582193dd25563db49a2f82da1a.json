{"ast":null,"code":"import { DELETE_FROM_CART_SUCCESS, DELETE_FROM_CART_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\nexport const removeFromCart = productId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = {\n      productId\n    };\n    axios.get(\"/api/cart/removeFromCart\", tokenConfig(getState, params)).then(res => {\n      let successMessage = res.data.message;\n      let cart = res.data.cart;\n      dispatch(removeFromCartSuccess(cart, successMessage));\n      resolve(successMessage);\n    }).catch(err => {\n      let errorMessage = err.response.data.message;\n      dispatch(removeFromCartFailure(errorMessage));\n      reject(errorMessage);\n    });\n  });\n};\n\nconst removeFromCartSuccess = (cart, message) => {\n  return {\n    type: DELETE_FROM_CART_SUCCESS,\n    payload: {\n      cart,\n      message\n    }\n  };\n};\n\nconst removeFromCartFailure = error => {\n  return {\n    type: DELETE_FROM_CART_FAILURE,\n    payload: {\n      error\n    }\n  };\n};","map":{"version":3,"names":["DELETE_FROM_CART_SUCCESS","DELETE_FROM_CART_FAILURE","tokenConfig","axios","removeFromCart","productId","dispatch","getState","Promise","resolve","reject","params","get","then","res","successMessage","data","message","cart","removeFromCartSuccess","catch","err","errorMessage","response","removeFromCartFailure","type","payload","error"],"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/redux/actions/cart-actions/removeFromCart.js"],"sourcesContent":["import { DELETE_FROM_CART_SUCCESS, DELETE_FROM_CART_FAILURE } from \"../types\";\nimport { tokenConfig } from \"../auth-actions/tokenConfig\";\nimport axios from \"axios\";\n\nexport const removeFromCart = productId => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    let params = { productId };\n    axios\n      .get(\"/api/cart/removeFromCart\", tokenConfig(getState, params))\n      .then(res => {\n        let successMessage = res.data.message;\n        let cart = res.data.cart;\n        dispatch(removeFromCartSuccess(cart, successMessage));\n        resolve(successMessage);\n      })\n      .catch(err => {\n        let errorMessage = err.response.data.message;\n        dispatch(removeFromCartFailure(errorMessage));\n        reject(errorMessage);\n      });\n  });\n};\n\nconst removeFromCartSuccess = (cart, message) => {\n  return {\n    type: DELETE_FROM_CART_SUCCESS,\n    payload: { cart, message }\n  };\n};\n\nconst removeFromCartFailure = error => {\n  return {\n    type: DELETE_FROM_CART_FAILURE,\n    payload: { error }\n  };\n};\n"],"mappings":"AAAA,SAASA,wBAAT,EAAmCC,wBAAnC,QAAmE,UAAnE;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGC,SAAS,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACjE,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtC,IAAIC,MAAM,GAAG;MAAEN;IAAF,CAAb;IACAF,KAAK,CACFS,GADH,CACO,0BADP,EACmCV,WAAW,CAACK,QAAD,EAAWI,MAAX,CAD9C,EAEGE,IAFH,CAEQC,GAAG,IAAI;MACX,IAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA9B;MACA,IAAIC,IAAI,GAAGJ,GAAG,CAACE,IAAJ,CAASE,IAApB;MACAZ,QAAQ,CAACa,qBAAqB,CAACD,IAAD,EAAOH,cAAP,CAAtB,CAAR;MACAN,OAAO,CAACM,cAAD,CAAP;IACD,CAPH,EAQGK,KARH,CAQSC,GAAG,IAAI;MACZ,IAAIC,YAAY,GAAGD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBC,OAArC;MACAX,QAAQ,CAACkB,qBAAqB,CAACF,YAAD,CAAtB,CAAR;MACAZ,MAAM,CAACY,YAAD,CAAN;IACD,CAZH;EAaD,CAfM,CAAP;AAgBD,CAjBM;;AAmBP,MAAMH,qBAAqB,GAAG,CAACD,IAAD,EAAOD,OAAP,KAAmB;EAC/C,OAAO;IACLQ,IAAI,EAAEzB,wBADD;IAEL0B,OAAO,EAAE;MAAER,IAAF;MAAQD;IAAR;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMO,qBAAqB,GAAGG,KAAK,IAAI;EACrC,OAAO;IACLF,IAAI,EAAExB,wBADD;IAELyB,OAAO,EAAE;MAAEC;IAAF;EAFJ,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}