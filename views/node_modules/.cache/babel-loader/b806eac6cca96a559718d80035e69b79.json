{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\Marketplace\\\\m1\\\\views\\\\src\\\\components\\\\cart\\\\Cart.js\";\n// eslint-disable-next-line\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Table, Spinner, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCartProducts } from \"../../redux/actions/cart-actions/fetchCartProducts\";\nimport { removeFromCart } from \"../../redux/actions/cart-actions/removeFromCart\";\nimport { changeCartQuantity } from \"../../redux/actions/cart-actions/changeCartQuantity\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Page404 from \"./../404\"; // eslint-disable-next-line\n\nimport ChooseAddressToDeliver from \"./ChooseAddressToDeliver\";\n\nfunction Cart() {\n  const {\n    cart,\n    totalPrice,\n    loading\n  } = useSelector(state => state.carttt);\n  const {\n    user\n  } = useSelector(state => state.userrr);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCartProducts());\n  }, [dispatch]);\n  /* handle loading spinner  */\n\n  let loadingSpinner;\n\n  if (loading && cart.length === 0) {\n    loadingSpinner = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), \" loading...\", \" \"));\n  }\n  /* handle empty message */\n\n\n  let emptyMessage;\n\n  if (!loading && cart.length === 0) {\n    emptyMessage = /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }\n    }, \"Your cart is empty\");\n  } // number in stock range\n\n\n  function options(numberInStock) {\n    let arr = [];\n\n    for (let i = 1; i <= numberInStock; i++) {\n      arr.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, i));\n    }\n\n    return arr;\n  }\n\n  if (!user && !loading) {\n    return /*#__PURE__*/React.createElement(Page404, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  } else if (cart) {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"total-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Total: $\", totalPrice)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, cart.length > 0 && /*#__PURE__*/React.createElement(Link, {\n      className: \"cart-pay\",\n      to: \"/checkout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Proceed to pay\")))), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      className: \"cart-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Total Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Remove\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, emptyMessage, loadingSpinner, cart.length > 0 && cart.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/product/${item.product._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, item.product.name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"custom-select\",\n        value: item.quantity,\n        onChange: e => {\n          let quantity = {\n            orderQuantity: e.target.value\n          };\n          dispatch(changeCartQuantity(item._id, quantity));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, options(item.product.numberInStock))), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"cart-product-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"$\", item.quantity * item.product.price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-danger\",\n        onClick: () => dispatch(removeFromCart(item.product._id)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }))));\n    }))));\n  }\n}\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/123/Documents/Easynet/Marketplace/m1/views/src/components/cart/Cart.js"],"names":["React","useEffect","useState","Container","Table","Spinner","Button","Row","Col","useSelector","useDispatch","fetchCartProducts","removeFromCart","changeCartQuantity","Link","FontAwesomeIcon","faTrash","Page404","ChooseAddressToDeliver","Cart","cart","totalPrice","loading","state","carttt","user","userrr","dispatch","loadingSpinner","length","emptyMessage","options","numberInStock","arr","i","push","map","item","_id","product","name","quantity","e","orderQuantity","target","value","price"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Table, Spinner, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCartProducts } from \"../../redux/actions/cart-actions/fetchCartProducts\";\nimport { removeFromCart } from \"../../redux/actions/cart-actions/removeFromCart\";\nimport { changeCartQuantity } from \"../../redux/actions/cart-actions/changeCartQuantity\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Page404 from \"./../404\";\n// eslint-disable-next-line\nimport ChooseAddressToDeliver from \"./ChooseAddressToDeliver\";\n\nfunction Cart() {\n  const { cart, totalPrice, loading } = useSelector(state => state.carttt);\n  const { user } = useSelector(state => state.userrr);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCartProducts());\n  }, [dispatch]);\n\n  /* handle loading spinner  */\n  let loadingSpinner;\n  if (loading && cart.length === 0) {\n    loadingSpinner = (\n      <tr>\n        <td colSpan='3'>\n          <Spinner animation='border' /> loading...{\" \"}\n        </td>\n      </tr>\n    );\n  }\n\n  /* handle empty message */\n  let emptyMessage;\n  if (!loading && cart.length === 0) {\n    emptyMessage = <td>Your cart is empty</td>;\n  }\n\n  // number in stock range\n  function options(numberInStock) {\n    let arr = [];\n\n    for (let i = 1; i <= numberInStock; i++) {\n      arr.push(\n        <option key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n\n    return arr;\n  }\n\n  if (!user && !loading) {\n    return <Page404 />;\n  } else if (cart) {\n    return (\n      <Container className='cart'>\n        <Row>\n          <Col className='total-price'>\n            <p>Total: ${totalPrice}</p>\n          </Col>\n          <Col>\n            {cart.length > 0 && (\n              <Link className='cart-pay' to='/checkout'>\n                <Button variant='secondary'>Proceed to pay</Button>\n              </Link>\n            )}\n          </Col>\n        </Row>\n\n        <Table striped bordered hover variant='dark' className='cart-table'>\n          <thead>\n            <tr>\n              <th>Item</th>\n              <th>quantity</th>\n              <th>Total Price</th>\n              <th>Remove</th>\n            </tr>\n          </thead>\n          <tbody>\n            {emptyMessage}\n            {loadingSpinner}\n            {cart.length > 0 &&\n              cart.map(item => {\n                return (\n                  <tr key={item._id}>\n                    <td>\n                      <Link to={`/product/${item.product._id}`}>{item.product.name}</Link>\n                    </td>\n\n                    <td>\n                      <select\n                        className='custom-select'\n                        value={item.quantity}\n                        onChange={e => {\n                          let quantity = { orderQuantity: e.target.value };\n                          dispatch(changeCartQuantity(item._id, quantity));\n                        }}>\n                        {options(item.product.numberInStock)}\n                      </select>\n                    </td>\n\n                    <td className='cart-product-price'>\n                      ${item.quantity * item.product.price}\n                    </td>\n                    <td>\n                      <Button\n                        className='btn btn-danger'\n                        onClick={() => dispatch(removeFromCart(item.product._id))}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}